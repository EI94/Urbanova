import { z } from 'zod';
/**
 * Timeline Types - Sistema Timeline Reale Urbanova
 *
 * Definisce tutti i tipi per:
 * - Auto WBS (Work Breakdown Structure)
 * - Re-Plan (Ripianificazione automatica)
 * - Critical Path (Percorso critico)
 * - Real-time Updates (Aggiornamenti real-time)
 */
/**
 * Fatti Doc Hunter
 */
export interface DocHunterFact {
    vendorId: string;
    documentType: 'DURC' | 'visura' | 'certification';
    status: 'pending' | 'valid' | 'expired' | 'invalid';
    validUntil: Date;
    lastChecked: Date;
    projectId: string;
    vendorName: string;
    documentNumber: string;
    issuingAuthority: string;
    notes?: string;
}
export declare const zDocHunterFact: z.ZodObject<{
    vendorId: z.ZodString;
    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
    validUntil: z.ZodDate;
    lastChecked: z.ZodDate;
    projectId: z.ZodString;
    vendorName: z.ZodString;
    documentNumber: z.ZodString;
    issuingAuthority: z.ZodString;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    status: "pending" | "valid" | "expired" | "invalid";
    vendorId: string;
    vendorName: string;
    documentType: "DURC" | "visura" | "certification";
    validUntil: Date;
    lastChecked: Date;
    documentNumber: string;
    issuingAuthority: string;
    notes?: string | undefined;
}, {
    projectId: string;
    status: "pending" | "valid" | "expired" | "invalid";
    vendorId: string;
    vendorName: string;
    documentType: "DURC" | "visura" | "certification";
    validUntil: Date;
    lastChecked: Date;
    documentNumber: string;
    issuingAuthority: string;
    notes?: string | undefined;
}>;
/**
 * Fatti Procurement
 */
export interface ProcurementFact {
    rdoId: string;
    status: 'draft' | 'published' | 'offers_received' | 'comparing' | 'awarded' | 'cancelled';
    deadline: Date;
    offersCount: number;
    awardedVendor?: string;
    projectId: string;
    rdoTitle: string;
    category: string;
    estimatedValue: number;
    location: string;
    createdBy: string;
    createdAt: Date;
    updatedAt: Date;
}
export declare const zProcurementFact: z.ZodObject<{
    rdoId: z.ZodString;
    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
    deadline: z.ZodDate;
    offersCount: z.ZodNumber;
    awardedVendor: z.ZodOptional<z.ZodString>;
    projectId: z.ZodString;
    rdoTitle: z.ZodString;
    category: z.ZodString;
    estimatedValue: z.ZodNumber;
    location: z.ZodString;
    createdBy: z.ZodString;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    category: string;
    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
    createdAt: Date;
    updatedAt: Date;
    location: string;
    rdoId: string;
    deadline: Date;
    offersCount: number;
    rdoTitle: string;
    estimatedValue: number;
    createdBy: string;
    awardedVendor?: string | undefined;
}, {
    projectId: string;
    category: string;
    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
    createdAt: Date;
    updatedAt: Date;
    location: string;
    rdoId: string;
    deadline: Date;
    offersCount: number;
    rdoTitle: string;
    estimatedValue: number;
    createdBy: string;
    awardedVendor?: string | undefined;
}>;
/**
 * Fatti SAL (Autorizzazioni)
 */
export interface SALFact {
    authorizationType: 'CDU' | 'SCIA' | 'permits' | 'building_permit' | 'environmental_clearance';
    status: 'pending' | 'submitted' | 'under_review' | 'approved' | 'rejected' | 'expired';
    submissionDate: Date;
    expectedResponseDate: Date;
    actualResponseDate?: Date;
    projectId: string;
    authority: string;
    referenceNumber: string;
    description: string;
    requirements: string[];
    documents: string[];
    notes?: string;
}
export declare const zSALFact: z.ZodObject<{
    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
    submissionDate: z.ZodDate;
    expectedResponseDate: z.ZodDate;
    actualResponseDate: z.ZodOptional<z.ZodDate>;
    projectId: z.ZodString;
    authority: z.ZodString;
    referenceNumber: z.ZodString;
    description: z.ZodString;
    requirements: z.ZodArray<z.ZodString, "many">;
    documents: z.ZodArray<z.ZodString, "many">;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    documents: string[];
    description: string;
    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
    submissionDate: Date;
    expectedResponseDate: Date;
    authority: string;
    referenceNumber: string;
    requirements: string[];
    notes?: string | undefined;
    actualResponseDate?: Date | undefined;
}, {
    projectId: string;
    documents: string[];
    description: string;
    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
    submissionDate: Date;
    expectedResponseDate: Date;
    authority: string;
    referenceNumber: string;
    requirements: string[];
    notes?: string | undefined;
    actualResponseDate?: Date | undefined;
}>;
/**
 * Fatti Listing
 */
export interface ListingFact {
    portalId: string;
    status: 'preparing' | 'pushed' | 'published' | 'monitoring' | 'expired' | 'removed';
    pushDate: Date;
    viewsCount: number;
    leadsCount: number;
    projectId: string;
    portalName: string;
    listingTitle: string;
    price: number;
    currency: string;
    location: string;
    propertyType: string;
    features: string[];
    images: string[];
    contactInfo: {
        phone: string;
        email: string;
        website?: string;
    };
}
export declare const zListingFact: z.ZodObject<{
    portalId: z.ZodString;
    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
    pushDate: z.ZodDate;
    viewsCount: z.ZodNumber;
    leadsCount: z.ZodNumber;
    projectId: z.ZodString;
    portalName: z.ZodString;
    listingTitle: z.ZodString;
    price: z.ZodNumber;
    currency: z.ZodString;
    location: z.ZodString;
    propertyType: z.ZodString;
    features: z.ZodArray<z.ZodString, "many">;
    images: z.ZodArray<z.ZodString, "many">;
    contactInfo: z.ZodObject<{
        phone: z.ZodString;
        email: z.ZodString;
        website: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email: string;
        phone: string;
        website?: string | undefined;
    }, {
        email: string;
        phone: string;
        website?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
    currency: string;
    features: string[];
    location: string;
    portalId: string;
    pushDate: Date;
    viewsCount: number;
    leadsCount: number;
    portalName: string;
    listingTitle: string;
    price: number;
    propertyType: string;
    images: string[];
    contactInfo: {
        email: string;
        phone: string;
        website?: string | undefined;
    };
}, {
    projectId: string;
    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
    currency: string;
    features: string[];
    location: string;
    portalId: string;
    pushDate: Date;
    viewsCount: number;
    leadsCount: number;
    portalName: string;
    listingTitle: string;
    price: number;
    propertyType: string;
    images: string[];
    contactInfo: {
        email: string;
        phone: string;
        website?: string | undefined;
    };
}>;
/**
 * Union type per tutti i fatti
 */
export type Fact = DocHunterFact | ProcurementFact | SALFact | ListingFact;
export declare const zFact: z.ZodUnion<[z.ZodObject<{
    vendorId: z.ZodString;
    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
    validUntil: z.ZodDate;
    lastChecked: z.ZodDate;
    projectId: z.ZodString;
    vendorName: z.ZodString;
    documentNumber: z.ZodString;
    issuingAuthority: z.ZodString;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    status: "pending" | "valid" | "expired" | "invalid";
    vendorId: string;
    vendorName: string;
    documentType: "DURC" | "visura" | "certification";
    validUntil: Date;
    lastChecked: Date;
    documentNumber: string;
    issuingAuthority: string;
    notes?: string | undefined;
}, {
    projectId: string;
    status: "pending" | "valid" | "expired" | "invalid";
    vendorId: string;
    vendorName: string;
    documentType: "DURC" | "visura" | "certification";
    validUntil: Date;
    lastChecked: Date;
    documentNumber: string;
    issuingAuthority: string;
    notes?: string | undefined;
}>, z.ZodObject<{
    rdoId: z.ZodString;
    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
    deadline: z.ZodDate;
    offersCount: z.ZodNumber;
    awardedVendor: z.ZodOptional<z.ZodString>;
    projectId: z.ZodString;
    rdoTitle: z.ZodString;
    category: z.ZodString;
    estimatedValue: z.ZodNumber;
    location: z.ZodString;
    createdBy: z.ZodString;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    category: string;
    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
    createdAt: Date;
    updatedAt: Date;
    location: string;
    rdoId: string;
    deadline: Date;
    offersCount: number;
    rdoTitle: string;
    estimatedValue: number;
    createdBy: string;
    awardedVendor?: string | undefined;
}, {
    projectId: string;
    category: string;
    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
    createdAt: Date;
    updatedAt: Date;
    location: string;
    rdoId: string;
    deadline: Date;
    offersCount: number;
    rdoTitle: string;
    estimatedValue: number;
    createdBy: string;
    awardedVendor?: string | undefined;
}>, z.ZodObject<{
    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
    submissionDate: z.ZodDate;
    expectedResponseDate: z.ZodDate;
    actualResponseDate: z.ZodOptional<z.ZodDate>;
    projectId: z.ZodString;
    authority: z.ZodString;
    referenceNumber: z.ZodString;
    description: z.ZodString;
    requirements: z.ZodArray<z.ZodString, "many">;
    documents: z.ZodArray<z.ZodString, "many">;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    documents: string[];
    description: string;
    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
    submissionDate: Date;
    expectedResponseDate: Date;
    authority: string;
    referenceNumber: string;
    requirements: string[];
    notes?: string | undefined;
    actualResponseDate?: Date | undefined;
}, {
    projectId: string;
    documents: string[];
    description: string;
    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
    submissionDate: Date;
    expectedResponseDate: Date;
    authority: string;
    referenceNumber: string;
    requirements: string[];
    notes?: string | undefined;
    actualResponseDate?: Date | undefined;
}>, z.ZodObject<{
    portalId: z.ZodString;
    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
    pushDate: z.ZodDate;
    viewsCount: z.ZodNumber;
    leadsCount: z.ZodNumber;
    projectId: z.ZodString;
    portalName: z.ZodString;
    listingTitle: z.ZodString;
    price: z.ZodNumber;
    currency: z.ZodString;
    location: z.ZodString;
    propertyType: z.ZodString;
    features: z.ZodArray<z.ZodString, "many">;
    images: z.ZodArray<z.ZodString, "many">;
    contactInfo: z.ZodObject<{
        phone: z.ZodString;
        email: z.ZodString;
        website: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email: string;
        phone: string;
        website?: string | undefined;
    }, {
        email: string;
        phone: string;
        website?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
    currency: string;
    features: string[];
    location: string;
    portalId: string;
    pushDate: Date;
    viewsCount: number;
    leadsCount: number;
    portalName: string;
    listingTitle: string;
    price: number;
    propertyType: string;
    images: string[];
    contactInfo: {
        email: string;
        phone: string;
        website?: string | undefined;
    };
}, {
    projectId: string;
    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
    currency: string;
    features: string[];
    location: string;
    portalId: string;
    pushDate: Date;
    viewsCount: number;
    leadsCount: number;
    portalName: string;
    listingTitle: string;
    price: number;
    propertyType: string;
    images: string[];
    contactInfo: {
        email: string;
        phone: string;
        website?: string | undefined;
    };
}>]>;
/**
 * Task WBS
 */
export interface WBSTask {
    id: string;
    name: string;
    description: string;
    type: 'milestone' | 'task' | 'subtask' | 'deliverable';
    status: 'not_started' | 'in_progress' | 'completed' | 'blocked' | 'cancelled';
    priority: 'low' | 'medium' | 'high' | 'critical';
    estimatedDuration: number;
    actualDuration?: number;
    startDate: Date;
    endDate: Date;
    actualStartDate?: Date;
    actualEndDate?: Date;
    dependencies: string[];
    dependents: string[];
    assignedTo?: string;
    resources: string[];
    progress: number;
    completedWork: number;
    totalWork: number;
    sourceFact?: Fact;
    factId?: string;
    projectId: string;
    parentTaskId?: string;
    children: string[];
    isCritical: boolean;
    slack: number;
    customFields: Record<string, any>;
    createdAt: Date;
    updatedAt: Date;
}
export declare const zWBSTask: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
    status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
    priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
    estimatedDuration: z.ZodNumber;
    actualDuration: z.ZodOptional<z.ZodNumber>;
    startDate: z.ZodDate;
    endDate: z.ZodDate;
    actualStartDate: z.ZodOptional<z.ZodDate>;
    actualEndDate: z.ZodOptional<z.ZodDate>;
    dependencies: z.ZodArray<z.ZodString, "many">;
    dependents: z.ZodArray<z.ZodString, "many">;
    assignedTo: z.ZodOptional<z.ZodString>;
    resources: z.ZodArray<z.ZodString, "many">;
    progress: z.ZodNumber;
    completedWork: z.ZodNumber;
    totalWork: z.ZodNumber;
    sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        vendorId: z.ZodString;
        documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
        status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
        validUntil: z.ZodDate;
        lastChecked: z.ZodDate;
        projectId: z.ZodString;
        vendorName: z.ZodString;
        documentNumber: z.ZodString;
        issuingAuthority: z.ZodString;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }>, z.ZodObject<{
        rdoId: z.ZodString;
        status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
        deadline: z.ZodDate;
        offersCount: z.ZodNumber;
        awardedVendor: z.ZodOptional<z.ZodString>;
        projectId: z.ZodString;
        rdoTitle: z.ZodString;
        category: z.ZodString;
        estimatedValue: z.ZodNumber;
        location: z.ZodString;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }>, z.ZodObject<{
        authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
        status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
        submissionDate: z.ZodDate;
        expectedResponseDate: z.ZodDate;
        actualResponseDate: z.ZodOptional<z.ZodDate>;
        projectId: z.ZodString;
        authority: z.ZodString;
        referenceNumber: z.ZodString;
        description: z.ZodString;
        requirements: z.ZodArray<z.ZodString, "many">;
        documents: z.ZodArray<z.ZodString, "many">;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }>, z.ZodObject<{
        portalId: z.ZodString;
        status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
        pushDate: z.ZodDate;
        viewsCount: z.ZodNumber;
        leadsCount: z.ZodNumber;
        projectId: z.ZodString;
        portalName: z.ZodString;
        listingTitle: z.ZodString;
        price: z.ZodNumber;
        currency: z.ZodString;
        location: z.ZodString;
        propertyType: z.ZodString;
        features: z.ZodArray<z.ZodString, "many">;
        images: z.ZodArray<z.ZodString, "many">;
        contactInfo: z.ZodObject<{
            phone: z.ZodString;
            email: z.ZodString;
            website: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            email: string;
            phone: string;
            website?: string | undefined;
        }, {
            email: string;
            phone: string;
            website?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }>]>>;
    factId: z.ZodOptional<z.ZodString>;
    projectId: z.ZodString;
    parentTaskId: z.ZodOptional<z.ZodString>;
    children: z.ZodArray<z.ZodString, "many">;
    isCritical: z.ZodBoolean;
    slack: z.ZodNumber;
    customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    description: string;
    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
    type: "milestone" | "task" | "subtask" | "deliverable";
    createdAt: Date;
    name: string;
    updatedAt: Date;
    priority: "low" | "medium" | "high" | "critical";
    dependencies: string[];
    progress: number;
    estimatedDuration: number;
    startDate: Date;
    endDate: Date;
    dependents: string[];
    resources: string[];
    completedWork: number;
    totalWork: number;
    children: string[];
    isCritical: boolean;
    slack: number;
    customFields: Record<string, any>;
    actualDuration?: number | undefined;
    actualStartDate?: Date | undefined;
    actualEndDate?: Date | undefined;
    assignedTo?: string | undefined;
    sourceFact?: {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    } | undefined;
    factId?: string | undefined;
    parentTaskId?: string | undefined;
}, {
    projectId: string;
    id: string;
    description: string;
    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
    type: "milestone" | "task" | "subtask" | "deliverable";
    createdAt: Date;
    name: string;
    updatedAt: Date;
    priority: "low" | "medium" | "high" | "critical";
    dependencies: string[];
    progress: number;
    estimatedDuration: number;
    startDate: Date;
    endDate: Date;
    dependents: string[];
    resources: string[];
    completedWork: number;
    totalWork: number;
    children: string[];
    isCritical: boolean;
    slack: number;
    customFields: Record<string, any>;
    actualDuration?: number | undefined;
    actualStartDate?: Date | undefined;
    actualEndDate?: Date | undefined;
    assignedTo?: string | undefined;
    sourceFact?: {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    } | undefined;
    factId?: string | undefined;
    parentTaskId?: string | undefined;
}>;
/**
 * Dipendenza tra task
 */
export interface WBSDependency {
    id: string;
    fromTaskId: string;
    toTaskId: string;
    type: 'finish_to_start' | 'start_to_start' | 'finish_to_finish' | 'start_to_finish';
    lag: number;
    projectId: string;
    description?: string;
    isCritical: boolean;
    createdAt: Date;
}
export declare const zWBSDependency: z.ZodObject<{
    id: z.ZodString;
    fromTaskId: z.ZodString;
    toTaskId: z.ZodString;
    type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
    lag: z.ZodNumber;
    projectId: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    isCritical: z.ZodBoolean;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
    createdAt: Date;
    isCritical: boolean;
    fromTaskId: string;
    toTaskId: string;
    lag: number;
    description?: string | undefined;
}, {
    projectId: string;
    id: string;
    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
    createdAt: Date;
    isCritical: boolean;
    fromTaskId: string;
    toTaskId: string;
    lag: number;
    description?: string | undefined;
}>;
/**
 * Work Breakdown Structure completa
 */
export interface WBS {
    id: string;
    projectId: string;
    name: string;
    description: string;
    tasks: WBSTask[];
    dependencies: WBSDependency[];
    criticalPath: string[];
    criticalPathDuration: number;
    startDate: Date;
    endDate: Date;
    actualStartDate?: Date;
    actualEndDate?: Date;
    overallProgress: number;
    completedTasks: number;
    totalTasks: number;
    version: number;
    generatedAt: Date;
    generatedBy: string;
    sourceFacts: Fact[];
    status: 'draft' | 'active' | 'completed' | 'archived';
    createdAt: Date;
    updatedAt: Date;
}
export declare const zWBS: z.ZodObject<{
    id: z.ZodString;
    projectId: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    tasks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
        status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
        priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
        estimatedDuration: z.ZodNumber;
        actualDuration: z.ZodOptional<z.ZodNumber>;
        startDate: z.ZodDate;
        endDate: z.ZodDate;
        actualStartDate: z.ZodOptional<z.ZodDate>;
        actualEndDate: z.ZodOptional<z.ZodDate>;
        dependencies: z.ZodArray<z.ZodString, "many">;
        dependents: z.ZodArray<z.ZodString, "many">;
        assignedTo: z.ZodOptional<z.ZodString>;
        resources: z.ZodArray<z.ZodString, "many">;
        progress: z.ZodNumber;
        completedWork: z.ZodNumber;
        totalWork: z.ZodNumber;
        sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>>;
        factId: z.ZodOptional<z.ZodString>;
        projectId: z.ZodString;
        parentTaskId: z.ZodOptional<z.ZodString>;
        children: z.ZodArray<z.ZodString, "many">;
        isCritical: z.ZodBoolean;
        slack: z.ZodNumber;
        customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        description: string;
        status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
        type: "milestone" | "task" | "subtask" | "deliverable";
        createdAt: Date;
        name: string;
        updatedAt: Date;
        priority: "low" | "medium" | "high" | "critical";
        dependencies: string[];
        progress: number;
        estimatedDuration: number;
        startDate: Date;
        endDate: Date;
        dependents: string[];
        resources: string[];
        completedWork: number;
        totalWork: number;
        children: string[];
        isCritical: boolean;
        slack: number;
        customFields: Record<string, any>;
        actualDuration?: number | undefined;
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
        assignedTo?: string | undefined;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        factId?: string | undefined;
        parentTaskId?: string | undefined;
    }, {
        projectId: string;
        id: string;
        description: string;
        status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
        type: "milestone" | "task" | "subtask" | "deliverable";
        createdAt: Date;
        name: string;
        updatedAt: Date;
        priority: "low" | "medium" | "high" | "critical";
        dependencies: string[];
        progress: number;
        estimatedDuration: number;
        startDate: Date;
        endDate: Date;
        dependents: string[];
        resources: string[];
        completedWork: number;
        totalWork: number;
        children: string[];
        isCritical: boolean;
        slack: number;
        customFields: Record<string, any>;
        actualDuration?: number | undefined;
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
        assignedTo?: string | undefined;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        factId?: string | undefined;
        parentTaskId?: string | undefined;
    }>, "many">;
    dependencies: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        fromTaskId: z.ZodString;
        toTaskId: z.ZodString;
        type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
        lag: z.ZodNumber;
        projectId: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        isCritical: z.ZodBoolean;
        createdAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
        createdAt: Date;
        isCritical: boolean;
        fromTaskId: string;
        toTaskId: string;
        lag: number;
        description?: string | undefined;
    }, {
        projectId: string;
        id: string;
        type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
        createdAt: Date;
        isCritical: boolean;
        fromTaskId: string;
        toTaskId: string;
        lag: number;
        description?: string | undefined;
    }>, "many">;
    criticalPath: z.ZodArray<z.ZodString, "many">;
    criticalPathDuration: z.ZodNumber;
    startDate: z.ZodDate;
    endDate: z.ZodDate;
    actualStartDate: z.ZodOptional<z.ZodDate>;
    actualEndDate: z.ZodOptional<z.ZodDate>;
    overallProgress: z.ZodNumber;
    completedTasks: z.ZodNumber;
    totalTasks: z.ZodNumber;
    version: z.ZodNumber;
    generatedAt: z.ZodDate;
    generatedBy: z.ZodString;
    sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
        vendorId: z.ZodString;
        documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
        status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
        validUntil: z.ZodDate;
        lastChecked: z.ZodDate;
        projectId: z.ZodString;
        vendorName: z.ZodString;
        documentNumber: z.ZodString;
        issuingAuthority: z.ZodString;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }>, z.ZodObject<{
        rdoId: z.ZodString;
        status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
        deadline: z.ZodDate;
        offersCount: z.ZodNumber;
        awardedVendor: z.ZodOptional<z.ZodString>;
        projectId: z.ZodString;
        rdoTitle: z.ZodString;
        category: z.ZodString;
        estimatedValue: z.ZodNumber;
        location: z.ZodString;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }>, z.ZodObject<{
        authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
        status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
        submissionDate: z.ZodDate;
        expectedResponseDate: z.ZodDate;
        actualResponseDate: z.ZodOptional<z.ZodDate>;
        projectId: z.ZodString;
        authority: z.ZodString;
        referenceNumber: z.ZodString;
        description: z.ZodString;
        requirements: z.ZodArray<z.ZodString, "many">;
        documents: z.ZodArray<z.ZodString, "many">;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }>, z.ZodObject<{
        portalId: z.ZodString;
        status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
        pushDate: z.ZodDate;
        viewsCount: z.ZodNumber;
        leadsCount: z.ZodNumber;
        projectId: z.ZodString;
        portalName: z.ZodString;
        listingTitle: z.ZodString;
        price: z.ZodNumber;
        currency: z.ZodString;
        location: z.ZodString;
        propertyType: z.ZodString;
        features: z.ZodArray<z.ZodString, "many">;
        images: z.ZodArray<z.ZodString, "many">;
        contactInfo: z.ZodObject<{
            phone: z.ZodString;
            email: z.ZodString;
            website: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            email: string;
            phone: string;
            website?: string | undefined;
        }, {
            email: string;
            phone: string;
            website?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }>]>, "many">;
    status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    description: string;
    status: "completed" | "active" | "draft" | "archived";
    createdAt: Date;
    name: string;
    version: number;
    updatedAt: Date;
    generatedAt: Date;
    generatedBy: string;
    dependencies: {
        projectId: string;
        id: string;
        type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
        createdAt: Date;
        isCritical: boolean;
        fromTaskId: string;
        toTaskId: string;
        lag: number;
        description?: string | undefined;
    }[];
    startDate: Date;
    endDate: Date;
    tasks: {
        projectId: string;
        id: string;
        description: string;
        status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
        type: "milestone" | "task" | "subtask" | "deliverable";
        createdAt: Date;
        name: string;
        updatedAt: Date;
        priority: "low" | "medium" | "high" | "critical";
        dependencies: string[];
        progress: number;
        estimatedDuration: number;
        startDate: Date;
        endDate: Date;
        dependents: string[];
        resources: string[];
        completedWork: number;
        totalWork: number;
        children: string[];
        isCritical: boolean;
        slack: number;
        customFields: Record<string, any>;
        actualDuration?: number | undefined;
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
        assignedTo?: string | undefined;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        factId?: string | undefined;
        parentTaskId?: string | undefined;
    }[];
    criticalPath: string[];
    criticalPathDuration: number;
    overallProgress: number;
    completedTasks: number;
    totalTasks: number;
    sourceFacts: ({
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    })[];
    actualStartDate?: Date | undefined;
    actualEndDate?: Date | undefined;
}, {
    projectId: string;
    id: string;
    description: string;
    status: "completed" | "active" | "draft" | "archived";
    createdAt: Date;
    name: string;
    version: number;
    updatedAt: Date;
    generatedAt: Date;
    generatedBy: string;
    dependencies: {
        projectId: string;
        id: string;
        type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
        createdAt: Date;
        isCritical: boolean;
        fromTaskId: string;
        toTaskId: string;
        lag: number;
        description?: string | undefined;
    }[];
    startDate: Date;
    endDate: Date;
    tasks: {
        projectId: string;
        id: string;
        description: string;
        status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
        type: "milestone" | "task" | "subtask" | "deliverable";
        createdAt: Date;
        name: string;
        updatedAt: Date;
        priority: "low" | "medium" | "high" | "critical";
        dependencies: string[];
        progress: number;
        estimatedDuration: number;
        startDate: Date;
        endDate: Date;
        dependents: string[];
        resources: string[];
        completedWork: number;
        totalWork: number;
        children: string[];
        isCritical: boolean;
        slack: number;
        customFields: Record<string, any>;
        actualDuration?: number | undefined;
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
        assignedTo?: string | undefined;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        factId?: string | undefined;
        parentTaskId?: string | undefined;
    }[];
    criticalPath: string[];
    criticalPathDuration: number;
    overallProgress: number;
    completedTasks: number;
    totalTasks: number;
    sourceFacts: ({
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    })[];
    actualStartDate?: Date | undefined;
    actualEndDate?: Date | undefined;
}>;
/**
 * Trigger per re-plan
 */
export interface RePlanTrigger {
    id: string;
    type: 'document_expiry' | 'sal_delay' | 'procurement_delay' | 'resource_conflict' | 'scope_change' | 'risk_materialized';
    projectId: string;
    cause: string;
    details: any;
    severity: 'low' | 'medium' | 'high' | 'critical';
    detectedAt: Date;
    impact: {
        affectedTasks: string[];
        delayDays: number;
        costImpact: number;
        riskLevel: 'low' | 'medium' | 'high';
        description: string;
    };
    status: 'detected' | 'analyzing' | 'proposed' | 'approved' | 'rejected' | 'applied';
    sourceFact?: Fact;
    detectedBy: string;
    createdAt: Date;
    updatedAt: Date;
}
export declare const zRePlanTrigger: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodEnum<["document_expiry", "sal_delay", "procurement_delay", "resource_conflict", "scope_change", "risk_materialized"]>;
    projectId: z.ZodString;
    cause: z.ZodString;
    details: z.ZodAny;
    severity: z.ZodEnum<["low", "medium", "high", "critical"]>;
    detectedAt: z.ZodDate;
    impact: z.ZodObject<{
        affectedTasks: z.ZodArray<z.ZodString, "many">;
        delayDays: z.ZodNumber;
        costImpact: z.ZodNumber;
        riskLevel: z.ZodEnum<["low", "medium", "high"]>;
        description: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        description: string;
        riskLevel: "low" | "medium" | "high";
        affectedTasks: string[];
        delayDays: number;
        costImpact: number;
    }, {
        description: string;
        riskLevel: "low" | "medium" | "high";
        affectedTasks: string[];
        delayDays: number;
        costImpact: number;
    }>;
    status: z.ZodEnum<["detected", "analyzing", "proposed", "approved", "rejected", "applied"]>;
    sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        vendorId: z.ZodString;
        documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
        status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
        validUntil: z.ZodDate;
        lastChecked: z.ZodDate;
        projectId: z.ZodString;
        vendorName: z.ZodString;
        documentNumber: z.ZodString;
        issuingAuthority: z.ZodString;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }, {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    }>, z.ZodObject<{
        rdoId: z.ZodString;
        status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
        deadline: z.ZodDate;
        offersCount: z.ZodNumber;
        awardedVendor: z.ZodOptional<z.ZodString>;
        projectId: z.ZodString;
        rdoTitle: z.ZodString;
        category: z.ZodString;
        estimatedValue: z.ZodNumber;
        location: z.ZodString;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }, {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    }>, z.ZodObject<{
        authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
        status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
        submissionDate: z.ZodDate;
        expectedResponseDate: z.ZodDate;
        actualResponseDate: z.ZodOptional<z.ZodDate>;
        projectId: z.ZodString;
        authority: z.ZodString;
        referenceNumber: z.ZodString;
        description: z.ZodString;
        requirements: z.ZodArray<z.ZodString, "many">;
        documents: z.ZodArray<z.ZodString, "many">;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }, {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    }>, z.ZodObject<{
        portalId: z.ZodString;
        status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
        pushDate: z.ZodDate;
        viewsCount: z.ZodNumber;
        leadsCount: z.ZodNumber;
        projectId: z.ZodString;
        portalName: z.ZodString;
        listingTitle: z.ZodString;
        price: z.ZodNumber;
        currency: z.ZodString;
        location: z.ZodString;
        propertyType: z.ZodString;
        features: z.ZodArray<z.ZodString, "many">;
        images: z.ZodArray<z.ZodString, "many">;
        contactInfo: z.ZodObject<{
            phone: z.ZodString;
            email: z.ZodString;
            website: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            email: string;
            phone: string;
            website?: string | undefined;
        }, {
            email: string;
            phone: string;
            website?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }, {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    }>]>>;
    detectedBy: z.ZodString;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
    type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
    createdAt: Date;
    updatedAt: Date;
    severity: "low" | "medium" | "high" | "critical";
    impact: {
        description: string;
        riskLevel: "low" | "medium" | "high";
        affectedTasks: string[];
        delayDays: number;
        costImpact: number;
    };
    cause: string;
    detectedAt: Date;
    detectedBy: string;
    sourceFact?: {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    } | undefined;
    details?: any;
}, {
    projectId: string;
    id: string;
    status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
    type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
    createdAt: Date;
    updatedAt: Date;
    severity: "low" | "medium" | "high" | "critical";
    impact: {
        description: string;
        riskLevel: "low" | "medium" | "high";
        affectedTasks: string[];
        delayDays: number;
        costImpact: number;
    };
    cause: string;
    detectedAt: Date;
    detectedBy: string;
    sourceFact?: {
        projectId: string;
        status: "pending" | "valid" | "expired" | "invalid";
        vendorId: string;
        vendorName: string;
        documentType: "DURC" | "visura" | "certification";
        validUntil: Date;
        lastChecked: Date;
        documentNumber: string;
        issuingAuthority: string;
        notes?: string | undefined;
    } | {
        projectId: string;
        category: string;
        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
        createdAt: Date;
        updatedAt: Date;
        location: string;
        rdoId: string;
        deadline: Date;
        offersCount: number;
        rdoTitle: string;
        estimatedValue: number;
        createdBy: string;
        awardedVendor?: string | undefined;
    } | {
        projectId: string;
        documents: string[];
        description: string;
        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
        submissionDate: Date;
        expectedResponseDate: Date;
        authority: string;
        referenceNumber: string;
        requirements: string[];
        notes?: string | undefined;
        actualResponseDate?: Date | undefined;
    } | {
        projectId: string;
        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
        currency: string;
        features: string[];
        location: string;
        portalId: string;
        pushDate: Date;
        viewsCount: number;
        leadsCount: number;
        portalName: string;
        listingTitle: string;
        price: number;
        propertyType: string;
        images: string[];
        contactInfo: {
            email: string;
            phone: string;
            website?: string | undefined;
        };
    } | undefined;
    details?: any;
}>;
/**
 * Shift di un task
 */
export interface TaskShift {
    taskId: string;
    originalStartDate: Date;
    originalEndDate: Date;
    newStartDate: Date;
    newEndDate: Date;
    shiftDays: number;
    reason: string;
    impact: {
        dependencies: string[];
        resources: string[];
        cost: number;
    };
}
export declare const zTaskShift: z.ZodObject<{
    taskId: z.ZodString;
    originalStartDate: z.ZodDate;
    originalEndDate: z.ZodDate;
    newStartDate: z.ZodDate;
    newEndDate: z.ZodDate;
    shiftDays: z.ZodNumber;
    reason: z.ZodString;
    impact: z.ZodObject<{
        dependencies: z.ZodArray<z.ZodString, "many">;
        resources: z.ZodArray<z.ZodString, "many">;
        cost: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        cost: number;
        dependencies: string[];
        resources: string[];
    }, {
        cost: number;
        dependencies: string[];
        resources: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    impact: {
        cost: number;
        dependencies: string[];
        resources: string[];
    };
    reason: string;
    taskId: string;
    originalStartDate: Date;
    originalEndDate: Date;
    newStartDate: Date;
    newEndDate: Date;
    shiftDays: number;
}, {
    impact: {
        cost: number;
        dependencies: string[];
        resources: string[];
    };
    reason: string;
    taskId: string;
    originalStartDate: Date;
    originalEndDate: Date;
    newStartDate: Date;
    newEndDate: Date;
    shiftDays: number;
}>;
/**
 * Cambio risorse
 */
export interface ResourceChange {
    taskId: string;
    originalResources: string[];
    newResources: string[];
    reason: string;
    impact: {
        cost: number;
        availability: boolean;
        skills: string[];
    };
}
export declare const zResourceChange: z.ZodObject<{
    taskId: z.ZodString;
    originalResources: z.ZodArray<z.ZodString, "many">;
    newResources: z.ZodArray<z.ZodString, "many">;
    reason: z.ZodString;
    impact: z.ZodObject<{
        cost: z.ZodNumber;
        availability: z.ZodBoolean;
        skills: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        cost: number;
        availability: boolean;
        skills: string[];
    }, {
        cost: number;
        availability: boolean;
        skills: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    impact: {
        cost: number;
        availability: boolean;
        skills: string[];
    };
    reason: string;
    taskId: string;
    originalResources: string[];
    newResources: string[];
}, {
    impact: {
        cost: number;
        availability: boolean;
        skills: string[];
    };
    reason: string;
    taskId: string;
    originalResources: string[];
    newResources: string[];
}>;
/**
 * Impatto costi
 */
export interface CostImpact {
    originalCost: number;
    newCost: number;
    difference: number;
    breakdown: {
        labor: number;
        materials: number;
        overhead: number;
        contingency: number;
    };
    currency: string;
}
export declare const zCostImpact: z.ZodObject<{
    originalCost: z.ZodNumber;
    newCost: z.ZodNumber;
    difference: z.ZodNumber;
    breakdown: z.ZodObject<{
        labor: z.ZodNumber;
        materials: z.ZodNumber;
        overhead: z.ZodNumber;
        contingency: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        labor: number;
        materials: number;
        overhead: number;
        contingency: number;
    }, {
        labor: number;
        materials: number;
        overhead: number;
        contingency: number;
    }>;
    currency: z.ZodString;
}, "strip", z.ZodTypeAny, {
    currency: string;
    breakdown: {
        labor: number;
        materials: number;
        overhead: number;
        contingency: number;
    };
    originalCost: number;
    newCost: number;
    difference: number;
}, {
    currency: string;
    breakdown: {
        labor: number;
        materials: number;
        overhead: number;
        contingency: number;
    };
    originalCost: number;
    newCost: number;
    difference: number;
}>;
/**
 * Valutazione rischi per timeline
 */
export interface TimelineRiskAssessment {
    overallRisk: 'low' | 'medium' | 'high' | 'critical';
    risks: {
        id: string;
        description: string;
        probability: number;
        impact: 'low' | 'medium' | 'high' | 'critical';
        mitigation: string;
    }[];
    recommendations: string[];
}
export declare const zTimelineRiskAssessment: z.ZodObject<{
    overallRisk: z.ZodEnum<["low", "medium", "high", "critical"]>;
    risks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        description: z.ZodString;
        probability: z.ZodNumber;
        impact: z.ZodEnum<["low", "medium", "high", "critical"]>;
        mitigation: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        description: string;
        impact: "low" | "medium" | "high" | "critical";
        probability: number;
        mitigation: string;
    }, {
        id: string;
        description: string;
        impact: "low" | "medium" | "high" | "critical";
        probability: number;
        mitigation: string;
    }>, "many">;
    recommendations: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    recommendations: string[];
    risks: {
        id: string;
        description: string;
        impact: "low" | "medium" | "high" | "critical";
        probability: number;
        mitigation: string;
    }[];
    overallRisk: "low" | "medium" | "high" | "critical";
}, {
    recommendations: string[];
    risks: {
        id: string;
        description: string;
        impact: "low" | "medium" | "high" | "critical";
        probability: number;
        mitigation: string;
    }[];
    overallRisk: "low" | "medium" | "high" | "critical";
}>;
/**
 * Proposta di re-plan
 */
export interface RePlanProposal {
    id: string;
    triggerId: string;
    projectId: string;
    currentTimeline: WBS;
    proposedTimeline: WBS;
    changes: {
        shiftedTasks: TaskShift[];
        newDependencies: WBSDependency[];
        resourceChanges: ResourceChange[];
        costImpact: CostImpact;
    };
    impact: {
        totalDelay: number;
        criticalPathChanges: string[];
        riskAssessment: TimelineRiskAssessment;
        recommendations: string[];
    };
    confirmation: {
        required: boolean;
        approver?: string;
        deadline?: Date;
        autoApply: boolean;
    };
    status: 'draft' | 'proposed' | 'approved' | 'rejected' | 'applied';
    createdBy: string;
    createdAt: Date;
    updatedAt: Date;
    appliedAt?: Date;
}
export declare const zRePlanProposal: z.ZodObject<{
    id: z.ZodString;
    triggerId: z.ZodString;
    projectId: z.ZodString;
    currentTimeline: z.ZodObject<{
        id: z.ZodString;
        projectId: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        tasks: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
            status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
            priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
            estimatedDuration: z.ZodNumber;
            actualDuration: z.ZodOptional<z.ZodNumber>;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            dependencies: z.ZodArray<z.ZodString, "many">;
            dependents: z.ZodArray<z.ZodString, "many">;
            assignedTo: z.ZodOptional<z.ZodString>;
            resources: z.ZodArray<z.ZodString, "many">;
            progress: z.ZodNumber;
            completedWork: z.ZodNumber;
            totalWork: z.ZodNumber;
            sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>>;
            factId: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            parentTaskId: z.ZodOptional<z.ZodString>;
            children: z.ZodArray<z.ZodString, "many">;
            isCritical: z.ZodBoolean;
            slack: z.ZodNumber;
            customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }>, "many">;
        dependencies: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            fromTaskId: z.ZodString;
            toTaskId: z.ZodString;
            type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
            lag: z.ZodNumber;
            projectId: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            isCritical: z.ZodBoolean;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }>, "many">;
        criticalPath: z.ZodArray<z.ZodString, "many">;
        criticalPathDuration: z.ZodNumber;
        startDate: z.ZodDate;
        endDate: z.ZodDate;
        actualStartDate: z.ZodOptional<z.ZodDate>;
        actualEndDate: z.ZodOptional<z.ZodDate>;
        overallProgress: z.ZodNumber;
        completedTasks: z.ZodNumber;
        totalTasks: z.ZodNumber;
        version: z.ZodNumber;
        generatedAt: z.ZodDate;
        generatedBy: z.ZodString;
        sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>, "many">;
        status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }>;
    proposedTimeline: z.ZodObject<{
        id: z.ZodString;
        projectId: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        tasks: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
            status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
            priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
            estimatedDuration: z.ZodNumber;
            actualDuration: z.ZodOptional<z.ZodNumber>;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            dependencies: z.ZodArray<z.ZodString, "many">;
            dependents: z.ZodArray<z.ZodString, "many">;
            assignedTo: z.ZodOptional<z.ZodString>;
            resources: z.ZodArray<z.ZodString, "many">;
            progress: z.ZodNumber;
            completedWork: z.ZodNumber;
            totalWork: z.ZodNumber;
            sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>>;
            factId: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            parentTaskId: z.ZodOptional<z.ZodString>;
            children: z.ZodArray<z.ZodString, "many">;
            isCritical: z.ZodBoolean;
            slack: z.ZodNumber;
            customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }>, "many">;
        dependencies: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            fromTaskId: z.ZodString;
            toTaskId: z.ZodString;
            type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
            lag: z.ZodNumber;
            projectId: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            isCritical: z.ZodBoolean;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }>, "many">;
        criticalPath: z.ZodArray<z.ZodString, "many">;
        criticalPathDuration: z.ZodNumber;
        startDate: z.ZodDate;
        endDate: z.ZodDate;
        actualStartDate: z.ZodOptional<z.ZodDate>;
        actualEndDate: z.ZodOptional<z.ZodDate>;
        overallProgress: z.ZodNumber;
        completedTasks: z.ZodNumber;
        totalTasks: z.ZodNumber;
        version: z.ZodNumber;
        generatedAt: z.ZodDate;
        generatedBy: z.ZodString;
        sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>, "many">;
        status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }>;
    changes: z.ZodObject<{
        shiftedTasks: z.ZodArray<z.ZodObject<{
            taskId: z.ZodString;
            originalStartDate: z.ZodDate;
            originalEndDate: z.ZodDate;
            newStartDate: z.ZodDate;
            newEndDate: z.ZodDate;
            shiftDays: z.ZodNumber;
            reason: z.ZodString;
            impact: z.ZodObject<{
                dependencies: z.ZodArray<z.ZodString, "many">;
                resources: z.ZodArray<z.ZodString, "many">;
                cost: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                cost: number;
                dependencies: string[];
                resources: string[];
            }, {
                cost: number;
                dependencies: string[];
                resources: string[];
            }>;
        }, "strip", z.ZodTypeAny, {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }, {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }>, "many">;
        newDependencies: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            fromTaskId: z.ZodString;
            toTaskId: z.ZodString;
            type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
            lag: z.ZodNumber;
            projectId: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            isCritical: z.ZodBoolean;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }>, "many">;
        resourceChanges: z.ZodArray<z.ZodObject<{
            taskId: z.ZodString;
            originalResources: z.ZodArray<z.ZodString, "many">;
            newResources: z.ZodArray<z.ZodString, "many">;
            reason: z.ZodString;
            impact: z.ZodObject<{
                cost: z.ZodNumber;
                availability: z.ZodBoolean;
                skills: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                cost: number;
                availability: boolean;
                skills: string[];
            }, {
                cost: number;
                availability: boolean;
                skills: string[];
            }>;
        }, "strip", z.ZodTypeAny, {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }, {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }>, "many">;
        costImpact: z.ZodObject<{
            originalCost: z.ZodNumber;
            newCost: z.ZodNumber;
            difference: z.ZodNumber;
            breakdown: z.ZodObject<{
                labor: z.ZodNumber;
                materials: z.ZodNumber;
                overhead: z.ZodNumber;
                contingency: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            }, {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            }>;
            currency: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        }, {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        costImpact: {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        };
        shiftedTasks: {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }[];
        newDependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        resourceChanges: {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }[];
    }, {
        costImpact: {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        };
        shiftedTasks: {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }[];
        newDependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        resourceChanges: {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }[];
    }>;
    impact: z.ZodObject<{
        totalDelay: z.ZodNumber;
        criticalPathChanges: z.ZodArray<z.ZodString, "many">;
        riskAssessment: z.ZodObject<{
            overallRisk: z.ZodEnum<["low", "medium", "high", "critical"]>;
            risks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                description: z.ZodString;
                probability: z.ZodNumber;
                impact: z.ZodEnum<["low", "medium", "high", "critical"]>;
                mitigation: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }, {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }>, "many">;
            recommendations: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        }, {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        }>;
        recommendations: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        recommendations: string[];
        totalDelay: number;
        criticalPathChanges: string[];
        riskAssessment: {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        };
    }, {
        recommendations: string[];
        totalDelay: number;
        criticalPathChanges: string[];
        riskAssessment: {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        };
    }>;
    confirmation: z.ZodObject<{
        required: z.ZodBoolean;
        approver: z.ZodOptional<z.ZodString>;
        deadline: z.ZodOptional<z.ZodDate>;
        autoApply: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        required: boolean;
        autoApply: boolean;
        deadline?: Date | undefined;
        approver?: string | undefined;
    }, {
        required: boolean;
        autoApply: boolean;
        deadline?: Date | undefined;
        approver?: string | undefined;
    }>;
    status: z.ZodEnum<["draft", "proposed", "approved", "rejected", "applied"]>;
    createdBy: z.ZodString;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
    appliedAt: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    status: "approved" | "rejected" | "draft" | "proposed" | "applied";
    createdAt: Date;
    updatedAt: Date;
    changes: {
        costImpact: {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        };
        shiftedTasks: {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }[];
        newDependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        resourceChanges: {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }[];
    };
    impact: {
        recommendations: string[];
        totalDelay: number;
        criticalPathChanges: string[];
        riskAssessment: {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        };
    };
    createdBy: string;
    triggerId: string;
    currentTimeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    proposedTimeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    confirmation: {
        required: boolean;
        autoApply: boolean;
        deadline?: Date | undefined;
        approver?: string | undefined;
    };
    appliedAt?: Date | undefined;
}, {
    projectId: string;
    id: string;
    status: "approved" | "rejected" | "draft" | "proposed" | "applied";
    createdAt: Date;
    updatedAt: Date;
    changes: {
        costImpact: {
            currency: string;
            breakdown: {
                labor: number;
                materials: number;
                overhead: number;
                contingency: number;
            };
            originalCost: number;
            newCost: number;
            difference: number;
        };
        shiftedTasks: {
            impact: {
                cost: number;
                dependencies: string[];
                resources: string[];
            };
            reason: string;
            taskId: string;
            originalStartDate: Date;
            originalEndDate: Date;
            newStartDate: Date;
            newEndDate: Date;
            shiftDays: number;
        }[];
        newDependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        resourceChanges: {
            impact: {
                cost: number;
                availability: boolean;
                skills: string[];
            };
            reason: string;
            taskId: string;
            originalResources: string[];
            newResources: string[];
        }[];
    };
    impact: {
        recommendations: string[];
        totalDelay: number;
        criticalPathChanges: string[];
        riskAssessment: {
            recommendations: string[];
            risks: {
                id: string;
                description: string;
                impact: "low" | "medium" | "high" | "critical";
                probability: number;
                mitigation: string;
            }[];
            overallRisk: "low" | "medium" | "high" | "critical";
        };
    };
    createdBy: string;
    triggerId: string;
    currentTimeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    proposedTimeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    confirmation: {
        required: boolean;
        autoApply: boolean;
        deadline?: Date | undefined;
        approver?: string | undefined;
    };
    appliedAt?: Date | undefined;
}>;
/**
 * Preview del re-plan
 */
export interface RePlanPreview {
    id: string;
    proposalId: string;
    beforeAfter: {
        before: string;
        after: string;
    };
    changes: {
        summary: string;
        details: string[];
        affectedTasks: number;
        totalDelay: number;
        costImpact: number;
    };
    impact: {
        summary: string;
        risks: string[];
        benefits: string[];
        recommendations: string[];
    };
    actions: {
        approve: boolean;
        reject: boolean;
        modify: boolean;
        autoApply: boolean;
    };
    createdAt: Date;
}
export declare const zRePlanPreview: z.ZodObject<{
    id: z.ZodString;
    proposalId: z.ZodString;
    beforeAfter: z.ZodObject<{
        before: z.ZodString;
        after: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        before: string;
        after: string;
    }, {
        before: string;
        after: string;
    }>;
    changes: z.ZodObject<{
        summary: z.ZodString;
        details: z.ZodArray<z.ZodString, "many">;
        affectedTasks: z.ZodNumber;
        totalDelay: z.ZodNumber;
        costImpact: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        summary: string;
        details: string[];
        affectedTasks: number;
        costImpact: number;
        totalDelay: number;
    }, {
        summary: string;
        details: string[];
        affectedTasks: number;
        costImpact: number;
        totalDelay: number;
    }>;
    impact: z.ZodObject<{
        summary: z.ZodString;
        risks: z.ZodArray<z.ZodString, "many">;
        benefits: z.ZodArray<z.ZodString, "many">;
        recommendations: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        recommendations: string[];
        summary: string;
        risks: string[];
        benefits: string[];
    }, {
        recommendations: string[];
        summary: string;
        risks: string[];
        benefits: string[];
    }>;
    actions: z.ZodObject<{
        approve: z.ZodBoolean;
        reject: z.ZodBoolean;
        modify: z.ZodBoolean;
        autoApply: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        approve: boolean;
        reject: boolean;
        autoApply: boolean;
        modify: boolean;
    }, {
        approve: boolean;
        reject: boolean;
        autoApply: boolean;
        modify: boolean;
    }>;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: Date;
    changes: {
        summary: string;
        details: string[];
        affectedTasks: number;
        costImpact: number;
        totalDelay: number;
    };
    impact: {
        recommendations: string[];
        summary: string;
        risks: string[];
        benefits: string[];
    };
    actions: {
        approve: boolean;
        reject: boolean;
        autoApply: boolean;
        modify: boolean;
    };
    proposalId: string;
    beforeAfter: {
        before: string;
        after: string;
    };
}, {
    id: string;
    createdAt: Date;
    changes: {
        summary: string;
        details: string[];
        affectedTasks: number;
        costImpact: number;
        totalDelay: number;
    };
    impact: {
        recommendations: string[];
        summary: string;
        risks: string[];
        benefits: string[];
    };
    actions: {
        approve: boolean;
        reject: boolean;
        autoApply: boolean;
        modify: boolean;
    };
    proposalId: string;
    beforeAfter: {
        before: string;
        after: string;
    };
}>;
/**
 * Timeline principale del progetto
 */
export interface ProjectTimeline {
    id: string;
    projectId: string;
    name: string;
    description: string;
    wbs: WBS;
    rePlanHistory: RePlanProposal[];
    activeTriggers: RePlanTrigger[];
    status: 'draft' | 'active' | 'completed' | 'archived';
    version: number;
    createdBy: string;
    createdAt: Date;
    updatedAt: Date;
    lastRegeneratedAt?: Date;
}
export declare const zProjectTimeline: z.ZodObject<{
    id: z.ZodString;
    projectId: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    wbs: z.ZodObject<{
        id: z.ZodString;
        projectId: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        tasks: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
            status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
            priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
            estimatedDuration: z.ZodNumber;
            actualDuration: z.ZodOptional<z.ZodNumber>;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            dependencies: z.ZodArray<z.ZodString, "many">;
            dependents: z.ZodArray<z.ZodString, "many">;
            assignedTo: z.ZodOptional<z.ZodString>;
            resources: z.ZodArray<z.ZodString, "many">;
            progress: z.ZodNumber;
            completedWork: z.ZodNumber;
            totalWork: z.ZodNumber;
            sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>>;
            factId: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            parentTaskId: z.ZodOptional<z.ZodString>;
            children: z.ZodArray<z.ZodString, "many">;
            isCritical: z.ZodBoolean;
            slack: z.ZodNumber;
            customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }>, "many">;
        dependencies: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            fromTaskId: z.ZodString;
            toTaskId: z.ZodString;
            type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
            lag: z.ZodNumber;
            projectId: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            isCritical: z.ZodBoolean;
            createdAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }, {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }>, "many">;
        criticalPath: z.ZodArray<z.ZodString, "many">;
        criticalPathDuration: z.ZodNumber;
        startDate: z.ZodDate;
        endDate: z.ZodDate;
        actualStartDate: z.ZodOptional<z.ZodDate>;
        actualEndDate: z.ZodOptional<z.ZodDate>;
        overallProgress: z.ZodNumber;
        completedTasks: z.ZodNumber;
        totalTasks: z.ZodNumber;
        version: z.ZodNumber;
        generatedAt: z.ZodDate;
        generatedBy: z.ZodString;
        sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>, "many">;
        status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    }>;
    rePlanHistory: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        triggerId: z.ZodString;
        projectId: z.ZodString;
        currentTimeline: z.ZodObject<{
            id: z.ZodString;
            projectId: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            tasks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                estimatedDuration: z.ZodNumber;
                actualDuration: z.ZodOptional<z.ZodNumber>;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                dependencies: z.ZodArray<z.ZodString, "many">;
                dependents: z.ZodArray<z.ZodString, "many">;
                assignedTo: z.ZodOptional<z.ZodString>;
                resources: z.ZodArray<z.ZodString, "many">;
                progress: z.ZodNumber;
                completedWork: z.ZodNumber;
                totalWork: z.ZodNumber;
                sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>>;
                factId: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                parentTaskId: z.ZodOptional<z.ZodString>;
                children: z.ZodArray<z.ZodString, "many">;
                isCritical: z.ZodBoolean;
                slack: z.ZodNumber;
                customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }>, "many">;
            dependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            criticalPath: z.ZodArray<z.ZodString, "many">;
            criticalPathDuration: z.ZodNumber;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            overallProgress: z.ZodNumber;
            completedTasks: z.ZodNumber;
            totalTasks: z.ZodNumber;
            version: z.ZodNumber;
            generatedAt: z.ZodDate;
            generatedBy: z.ZodString;
            sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>, "many">;
            status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }>;
        proposedTimeline: z.ZodObject<{
            id: z.ZodString;
            projectId: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            tasks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                estimatedDuration: z.ZodNumber;
                actualDuration: z.ZodOptional<z.ZodNumber>;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                dependencies: z.ZodArray<z.ZodString, "many">;
                dependents: z.ZodArray<z.ZodString, "many">;
                assignedTo: z.ZodOptional<z.ZodString>;
                resources: z.ZodArray<z.ZodString, "many">;
                progress: z.ZodNumber;
                completedWork: z.ZodNumber;
                totalWork: z.ZodNumber;
                sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>>;
                factId: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                parentTaskId: z.ZodOptional<z.ZodString>;
                children: z.ZodArray<z.ZodString, "many">;
                isCritical: z.ZodBoolean;
                slack: z.ZodNumber;
                customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }>, "many">;
            dependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            criticalPath: z.ZodArray<z.ZodString, "many">;
            criticalPathDuration: z.ZodNumber;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            overallProgress: z.ZodNumber;
            completedTasks: z.ZodNumber;
            totalTasks: z.ZodNumber;
            version: z.ZodNumber;
            generatedAt: z.ZodDate;
            generatedBy: z.ZodString;
            sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>, "many">;
            status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }>;
        changes: z.ZodObject<{
            shiftedTasks: z.ZodArray<z.ZodObject<{
                taskId: z.ZodString;
                originalStartDate: z.ZodDate;
                originalEndDate: z.ZodDate;
                newStartDate: z.ZodDate;
                newEndDate: z.ZodDate;
                shiftDays: z.ZodNumber;
                reason: z.ZodString;
                impact: z.ZodObject<{
                    dependencies: z.ZodArray<z.ZodString, "many">;
                    resources: z.ZodArray<z.ZodString, "many">;
                    cost: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                }, {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                }>;
            }, "strip", z.ZodTypeAny, {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }, {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }>, "many">;
            newDependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            resourceChanges: z.ZodArray<z.ZodObject<{
                taskId: z.ZodString;
                originalResources: z.ZodArray<z.ZodString, "many">;
                newResources: z.ZodArray<z.ZodString, "many">;
                reason: z.ZodString;
                impact: z.ZodObject<{
                    cost: z.ZodNumber;
                    availability: z.ZodBoolean;
                    skills: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                }, {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                }>;
            }, "strip", z.ZodTypeAny, {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }, {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }>, "many">;
            costImpact: z.ZodObject<{
                originalCost: z.ZodNumber;
                newCost: z.ZodNumber;
                difference: z.ZodNumber;
                breakdown: z.ZodObject<{
                    labor: z.ZodNumber;
                    materials: z.ZodNumber;
                    overhead: z.ZodNumber;
                    contingency: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                }, {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                }>;
                currency: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            }, {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            }>;
        }, "strip", z.ZodTypeAny, {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        }, {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        }>;
        impact: z.ZodObject<{
            totalDelay: z.ZodNumber;
            criticalPathChanges: z.ZodArray<z.ZodString, "many">;
            riskAssessment: z.ZodObject<{
                overallRisk: z.ZodEnum<["low", "medium", "high", "critical"]>;
                risks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodString;
                    probability: z.ZodNumber;
                    impact: z.ZodEnum<["low", "medium", "high", "critical"]>;
                    mitigation: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }, {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }>, "many">;
                recommendations: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            }, {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            }>;
            recommendations: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        }, {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        }>;
        confirmation: z.ZodObject<{
            required: z.ZodBoolean;
            approver: z.ZodOptional<z.ZodString>;
            deadline: z.ZodOptional<z.ZodDate>;
            autoApply: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        }, {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        }>;
        status: z.ZodEnum<["draft", "proposed", "approved", "rejected", "applied"]>;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
        appliedAt: z.ZodOptional<z.ZodDate>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }>, "many">;
    activeTriggers: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        type: z.ZodEnum<["document_expiry", "sal_delay", "procurement_delay", "resource_conflict", "scope_change", "risk_materialized"]>;
        projectId: z.ZodString;
        cause: z.ZodString;
        details: z.ZodAny;
        severity: z.ZodEnum<["low", "medium", "high", "critical"]>;
        detectedAt: z.ZodDate;
        impact: z.ZodObject<{
            affectedTasks: z.ZodArray<z.ZodString, "many">;
            delayDays: z.ZodNumber;
            costImpact: z.ZodNumber;
            riskLevel: z.ZodEnum<["low", "medium", "high"]>;
            description: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        }, {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        }>;
        status: z.ZodEnum<["detected", "analyzing", "proposed", "approved", "rejected", "applied"]>;
        sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>>;
        detectedBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }>, "many">;
    status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
    version: z.ZodNumber;
    createdBy: z.ZodString;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
    lastRegeneratedAt: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    id: string;
    description: string;
    status: "completed" | "active" | "draft" | "archived";
    createdAt: Date;
    name: string;
    version: number;
    updatedAt: Date;
    createdBy: string;
    wbs: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    rePlanHistory: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }[];
    activeTriggers: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }[];
    lastRegeneratedAt?: Date | undefined;
}, {
    projectId: string;
    id: string;
    description: string;
    status: "completed" | "active" | "draft" | "archived";
    createdAt: Date;
    name: string;
    version: number;
    updatedAt: Date;
    createdBy: string;
    wbs: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        generatedAt: Date;
        generatedBy: string;
        dependencies: {
            projectId: string;
            id: string;
            type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
            createdAt: Date;
            isCritical: boolean;
            fromTaskId: string;
            toTaskId: string;
            lag: number;
            description?: string | undefined;
        }[];
        startDate: Date;
        endDate: Date;
        tasks: {
            projectId: string;
            id: string;
            description: string;
            status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
            type: "milestone" | "task" | "subtask" | "deliverable";
            createdAt: Date;
            name: string;
            updatedAt: Date;
            priority: "low" | "medium" | "high" | "critical";
            dependencies: string[];
            progress: number;
            estimatedDuration: number;
            startDate: Date;
            endDate: Date;
            dependents: string[];
            resources: string[];
            completedWork: number;
            totalWork: number;
            children: string[];
            isCritical: boolean;
            slack: number;
            customFields: Record<string, any>;
            actualDuration?: number | undefined;
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
            assignedTo?: string | undefined;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            factId?: string | undefined;
            parentTaskId?: string | undefined;
        }[];
        criticalPath: string[];
        criticalPathDuration: number;
        overallProgress: number;
        completedTasks: number;
        totalTasks: number;
        sourceFacts: ({
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        })[];
        actualStartDate?: Date | undefined;
        actualEndDate?: Date | undefined;
    };
    rePlanHistory: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }[];
    activeTriggers: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }[];
    lastRegeneratedAt?: Date | undefined;
}>;
/**
 * Request per generazione timeline
 */
export interface GenerateTimelineRequest {
    projectId: string;
    options?: {
        includeHistory?: boolean;
        forceRegenerate?: boolean;
        includeFacts?: boolean;
    };
}
export declare const zGenerateTimelineRequest: z.ZodObject<{
    projectId: z.ZodString;
    options: z.ZodOptional<z.ZodObject<{
        includeHistory: z.ZodOptional<z.ZodBoolean>;
        forceRegenerate: z.ZodOptional<z.ZodBoolean>;
        includeFacts: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        includeHistory?: boolean | undefined;
        forceRegenerate?: boolean | undefined;
        includeFacts?: boolean | undefined;
    }, {
        includeHistory?: boolean | undefined;
        forceRegenerate?: boolean | undefined;
        includeFacts?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    options?: {
        includeHistory?: boolean | undefined;
        forceRegenerate?: boolean | undefined;
        includeFacts?: boolean | undefined;
    } | undefined;
}, {
    projectId: string;
    options?: {
        includeHistory?: boolean | undefined;
        forceRegenerate?: boolean | undefined;
        includeFacts?: boolean | undefined;
    } | undefined;
}>;
/**
 * Response generazione timeline
 */
export interface GenerateTimelineResponse {
    success: boolean;
    timeline: ProjectTimeline;
    generatedAt: Date;
    duration: number;
    factsUsed: number;
    tasksGenerated: number;
    criticalPathLength: number;
}
export declare const zGenerateTimelineResponse: z.ZodObject<{
    success: z.ZodBoolean;
    timeline: z.ZodObject<{
        id: z.ZodString;
        projectId: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        wbs: z.ZodObject<{
            id: z.ZodString;
            projectId: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            tasks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                estimatedDuration: z.ZodNumber;
                actualDuration: z.ZodOptional<z.ZodNumber>;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                dependencies: z.ZodArray<z.ZodString, "many">;
                dependents: z.ZodArray<z.ZodString, "many">;
                assignedTo: z.ZodOptional<z.ZodString>;
                resources: z.ZodArray<z.ZodString, "many">;
                progress: z.ZodNumber;
                completedWork: z.ZodNumber;
                totalWork: z.ZodNumber;
                sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>>;
                factId: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                parentTaskId: z.ZodOptional<z.ZodString>;
                children: z.ZodArray<z.ZodString, "many">;
                isCritical: z.ZodBoolean;
                slack: z.ZodNumber;
                customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }>, "many">;
            dependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            criticalPath: z.ZodArray<z.ZodString, "many">;
            criticalPathDuration: z.ZodNumber;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            overallProgress: z.ZodNumber;
            completedTasks: z.ZodNumber;
            totalTasks: z.ZodNumber;
            version: z.ZodNumber;
            generatedAt: z.ZodDate;
            generatedBy: z.ZodString;
            sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>, "many">;
            status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }>;
        rePlanHistory: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            triggerId: z.ZodString;
            projectId: z.ZodString;
            currentTimeline: z.ZodObject<{
                id: z.ZodString;
                projectId: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                tasks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodString;
                    type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                    status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                    priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                    estimatedDuration: z.ZodNumber;
                    actualDuration: z.ZodOptional<z.ZodNumber>;
                    startDate: z.ZodDate;
                    endDate: z.ZodDate;
                    actualStartDate: z.ZodOptional<z.ZodDate>;
                    actualEndDate: z.ZodOptional<z.ZodDate>;
                    dependencies: z.ZodArray<z.ZodString, "many">;
                    dependents: z.ZodArray<z.ZodString, "many">;
                    assignedTo: z.ZodOptional<z.ZodString>;
                    resources: z.ZodArray<z.ZodString, "many">;
                    progress: z.ZodNumber;
                    completedWork: z.ZodNumber;
                    totalWork: z.ZodNumber;
                    sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        vendorId: z.ZodString;
                        documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                        status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                        validUntil: z.ZodDate;
                        lastChecked: z.ZodDate;
                        projectId: z.ZodString;
                        vendorName: z.ZodString;
                        documentNumber: z.ZodString;
                        issuingAuthority: z.ZodString;
                        notes: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    }, {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    }>, z.ZodObject<{
                        rdoId: z.ZodString;
                        status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                        deadline: z.ZodDate;
                        offersCount: z.ZodNumber;
                        awardedVendor: z.ZodOptional<z.ZodString>;
                        projectId: z.ZodString;
                        rdoTitle: z.ZodString;
                        category: z.ZodString;
                        estimatedValue: z.ZodNumber;
                        location: z.ZodString;
                        createdBy: z.ZodString;
                        createdAt: z.ZodDate;
                        updatedAt: z.ZodDate;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    }, {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    }>, z.ZodObject<{
                        authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                        status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                        submissionDate: z.ZodDate;
                        expectedResponseDate: z.ZodDate;
                        actualResponseDate: z.ZodOptional<z.ZodDate>;
                        projectId: z.ZodString;
                        authority: z.ZodString;
                        referenceNumber: z.ZodString;
                        description: z.ZodString;
                        requirements: z.ZodArray<z.ZodString, "many">;
                        documents: z.ZodArray<z.ZodString, "many">;
                        notes: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    }, {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    }>, z.ZodObject<{
                        portalId: z.ZodString;
                        status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                        pushDate: z.ZodDate;
                        viewsCount: z.ZodNumber;
                        leadsCount: z.ZodNumber;
                        projectId: z.ZodString;
                        portalName: z.ZodString;
                        listingTitle: z.ZodString;
                        price: z.ZodNumber;
                        currency: z.ZodString;
                        location: z.ZodString;
                        propertyType: z.ZodString;
                        features: z.ZodArray<z.ZodString, "many">;
                        images: z.ZodArray<z.ZodString, "many">;
                        contactInfo: z.ZodObject<{
                            phone: z.ZodString;
                            email: z.ZodString;
                            website: z.ZodOptional<z.ZodString>;
                        }, "strip", z.ZodTypeAny, {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        }, {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    }, {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    }>]>>;
                    factId: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    parentTaskId: z.ZodOptional<z.ZodString>;
                    children: z.ZodArray<z.ZodString, "many">;
                    isCritical: z.ZodBoolean;
                    slack: z.ZodNumber;
                    customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }, {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }>, "many">;
                dependencies: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    fromTaskId: z.ZodString;
                    toTaskId: z.ZodString;
                    type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                    lag: z.ZodNumber;
                    projectId: z.ZodString;
                    description: z.ZodOptional<z.ZodString>;
                    isCritical: z.ZodBoolean;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }>, "many">;
                criticalPath: z.ZodArray<z.ZodString, "many">;
                criticalPathDuration: z.ZodNumber;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                overallProgress: z.ZodNumber;
                completedTasks: z.ZodNumber;
                totalTasks: z.ZodNumber;
                version: z.ZodNumber;
                generatedAt: z.ZodDate;
                generatedBy: z.ZodString;
                sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>, "many">;
                status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            }>;
            proposedTimeline: z.ZodObject<{
                id: z.ZodString;
                projectId: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                tasks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    name: z.ZodString;
                    description: z.ZodString;
                    type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                    status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                    priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                    estimatedDuration: z.ZodNumber;
                    actualDuration: z.ZodOptional<z.ZodNumber>;
                    startDate: z.ZodDate;
                    endDate: z.ZodDate;
                    actualStartDate: z.ZodOptional<z.ZodDate>;
                    actualEndDate: z.ZodOptional<z.ZodDate>;
                    dependencies: z.ZodArray<z.ZodString, "many">;
                    dependents: z.ZodArray<z.ZodString, "many">;
                    assignedTo: z.ZodOptional<z.ZodString>;
                    resources: z.ZodArray<z.ZodString, "many">;
                    progress: z.ZodNumber;
                    completedWork: z.ZodNumber;
                    totalWork: z.ZodNumber;
                    sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                        vendorId: z.ZodString;
                        documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                        status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                        validUntil: z.ZodDate;
                        lastChecked: z.ZodDate;
                        projectId: z.ZodString;
                        vendorName: z.ZodString;
                        documentNumber: z.ZodString;
                        issuingAuthority: z.ZodString;
                        notes: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    }, {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    }>, z.ZodObject<{
                        rdoId: z.ZodString;
                        status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                        deadline: z.ZodDate;
                        offersCount: z.ZodNumber;
                        awardedVendor: z.ZodOptional<z.ZodString>;
                        projectId: z.ZodString;
                        rdoTitle: z.ZodString;
                        category: z.ZodString;
                        estimatedValue: z.ZodNumber;
                        location: z.ZodString;
                        createdBy: z.ZodString;
                        createdAt: z.ZodDate;
                        updatedAt: z.ZodDate;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    }, {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    }>, z.ZodObject<{
                        authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                        status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                        submissionDate: z.ZodDate;
                        expectedResponseDate: z.ZodDate;
                        actualResponseDate: z.ZodOptional<z.ZodDate>;
                        projectId: z.ZodString;
                        authority: z.ZodString;
                        referenceNumber: z.ZodString;
                        description: z.ZodString;
                        requirements: z.ZodArray<z.ZodString, "many">;
                        documents: z.ZodArray<z.ZodString, "many">;
                        notes: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    }, {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    }>, z.ZodObject<{
                        portalId: z.ZodString;
                        status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                        pushDate: z.ZodDate;
                        viewsCount: z.ZodNumber;
                        leadsCount: z.ZodNumber;
                        projectId: z.ZodString;
                        portalName: z.ZodString;
                        listingTitle: z.ZodString;
                        price: z.ZodNumber;
                        currency: z.ZodString;
                        location: z.ZodString;
                        propertyType: z.ZodString;
                        features: z.ZodArray<z.ZodString, "many">;
                        images: z.ZodArray<z.ZodString, "many">;
                        contactInfo: z.ZodObject<{
                            phone: z.ZodString;
                            email: z.ZodString;
                            website: z.ZodOptional<z.ZodString>;
                        }, "strip", z.ZodTypeAny, {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        }, {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        }>;
                    }, "strip", z.ZodTypeAny, {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    }, {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    }>]>>;
                    factId: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    parentTaskId: z.ZodOptional<z.ZodString>;
                    children: z.ZodArray<z.ZodString, "many">;
                    isCritical: z.ZodBoolean;
                    slack: z.ZodNumber;
                    customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }, {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }>, "many">;
                dependencies: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    fromTaskId: z.ZodString;
                    toTaskId: z.ZodString;
                    type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                    lag: z.ZodNumber;
                    projectId: z.ZodString;
                    description: z.ZodOptional<z.ZodString>;
                    isCritical: z.ZodBoolean;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }>, "many">;
                criticalPath: z.ZodArray<z.ZodString, "many">;
                criticalPathDuration: z.ZodNumber;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                overallProgress: z.ZodNumber;
                completedTasks: z.ZodNumber;
                totalTasks: z.ZodNumber;
                version: z.ZodNumber;
                generatedAt: z.ZodDate;
                generatedBy: z.ZodString;
                sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>, "many">;
                status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            }>;
            changes: z.ZodObject<{
                shiftedTasks: z.ZodArray<z.ZodObject<{
                    taskId: z.ZodString;
                    originalStartDate: z.ZodDate;
                    originalEndDate: z.ZodDate;
                    newStartDate: z.ZodDate;
                    newEndDate: z.ZodDate;
                    shiftDays: z.ZodNumber;
                    reason: z.ZodString;
                    impact: z.ZodObject<{
                        dependencies: z.ZodArray<z.ZodString, "many">;
                        resources: z.ZodArray<z.ZodString, "many">;
                        cost: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    }, {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    }>;
                }, "strip", z.ZodTypeAny, {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }, {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }>, "many">;
                newDependencies: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    fromTaskId: z.ZodString;
                    toTaskId: z.ZodString;
                    type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                    lag: z.ZodNumber;
                    projectId: z.ZodString;
                    description: z.ZodOptional<z.ZodString>;
                    isCritical: z.ZodBoolean;
                    createdAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }, {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }>, "many">;
                resourceChanges: z.ZodArray<z.ZodObject<{
                    taskId: z.ZodString;
                    originalResources: z.ZodArray<z.ZodString, "many">;
                    newResources: z.ZodArray<z.ZodString, "many">;
                    reason: z.ZodString;
                    impact: z.ZodObject<{
                        cost: z.ZodNumber;
                        availability: z.ZodBoolean;
                        skills: z.ZodArray<z.ZodString, "many">;
                    }, "strip", z.ZodTypeAny, {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    }, {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    }>;
                }, "strip", z.ZodTypeAny, {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }, {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }>, "many">;
                costImpact: z.ZodObject<{
                    originalCost: z.ZodNumber;
                    newCost: z.ZodNumber;
                    difference: z.ZodNumber;
                    breakdown: z.ZodObject<{
                        labor: z.ZodNumber;
                        materials: z.ZodNumber;
                        overhead: z.ZodNumber;
                        contingency: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    }, {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    }>;
                    currency: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                }, {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                }>;
            }, "strip", z.ZodTypeAny, {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            }, {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            }>;
            impact: z.ZodObject<{
                totalDelay: z.ZodNumber;
                criticalPathChanges: z.ZodArray<z.ZodString, "many">;
                riskAssessment: z.ZodObject<{
                    overallRisk: z.ZodEnum<["low", "medium", "high", "critical"]>;
                    risks: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        description: z.ZodString;
                        probability: z.ZodNumber;
                        impact: z.ZodEnum<["low", "medium", "high", "critical"]>;
                        mitigation: z.ZodString;
                    }, "strip", z.ZodTypeAny, {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }, {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }>, "many">;
                    recommendations: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                }, {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                }>;
                recommendations: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            }, {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            }>;
            confirmation: z.ZodObject<{
                required: z.ZodBoolean;
                approver: z.ZodOptional<z.ZodString>;
                deadline: z.ZodOptional<z.ZodDate>;
                autoApply: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            }, {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            }>;
            status: z.ZodEnum<["draft", "proposed", "approved", "rejected", "applied"]>;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
            appliedAt: z.ZodOptional<z.ZodDate>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }>, "many">;
        activeTriggers: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            type: z.ZodEnum<["document_expiry", "sal_delay", "procurement_delay", "resource_conflict", "scope_change", "risk_materialized"]>;
            projectId: z.ZodString;
            cause: z.ZodString;
            details: z.ZodAny;
            severity: z.ZodEnum<["low", "medium", "high", "critical"]>;
            detectedAt: z.ZodDate;
            impact: z.ZodObject<{
                affectedTasks: z.ZodArray<z.ZodString, "many">;
                delayDays: z.ZodNumber;
                costImpact: z.ZodNumber;
                riskLevel: z.ZodEnum<["low", "medium", "high"]>;
                description: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            }, {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            }>;
            status: z.ZodEnum<["detected", "analyzing", "proposed", "approved", "rejected", "applied"]>;
            sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>>;
            detectedBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }, {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }>, "many">;
        status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
        version: z.ZodNumber;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
        lastRegeneratedAt: z.ZodOptional<z.ZodDate>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        createdBy: string;
        wbs: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        rePlanHistory: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }[];
        activeTriggers: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }[];
        lastRegeneratedAt?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        createdBy: string;
        wbs: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        rePlanHistory: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }[];
        activeTriggers: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }[];
        lastRegeneratedAt?: Date | undefined;
    }>;
    generatedAt: z.ZodDate;
    duration: z.ZodNumber;
    factsUsed: z.ZodNumber;
    tasksGenerated: z.ZodNumber;
    criticalPathLength: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    timeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        createdBy: string;
        wbs: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        rePlanHistory: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }[];
        activeTriggers: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }[];
        lastRegeneratedAt?: Date | undefined;
    };
    generatedAt: Date;
    success: boolean;
    duration: number;
    factsUsed: number;
    tasksGenerated: number;
    criticalPathLength: number;
}, {
    timeline: {
        projectId: string;
        id: string;
        description: string;
        status: "completed" | "active" | "draft" | "archived";
        createdAt: Date;
        name: string;
        version: number;
        updatedAt: Date;
        createdBy: string;
        wbs: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        rePlanHistory: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "draft" | "proposed" | "applied";
            createdAt: Date;
            updatedAt: Date;
            changes: {
                costImpact: {
                    currency: string;
                    breakdown: {
                        labor: number;
                        materials: number;
                        overhead: number;
                        contingency: number;
                    };
                    originalCost: number;
                    newCost: number;
                    difference: number;
                };
                shiftedTasks: {
                    impact: {
                        cost: number;
                        dependencies: string[];
                        resources: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalStartDate: Date;
                    originalEndDate: Date;
                    newStartDate: Date;
                    newEndDate: Date;
                    shiftDays: number;
                }[];
                newDependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                resourceChanges: {
                    impact: {
                        cost: number;
                        availability: boolean;
                        skills: string[];
                    };
                    reason: string;
                    taskId: string;
                    originalResources: string[];
                    newResources: string[];
                }[];
            };
            impact: {
                recommendations: string[];
                totalDelay: number;
                criticalPathChanges: string[];
                riskAssessment: {
                    recommendations: string[];
                    risks: {
                        id: string;
                        description: string;
                        impact: "low" | "medium" | "high" | "critical";
                        probability: number;
                        mitigation: string;
                    }[];
                    overallRisk: "low" | "medium" | "high" | "critical";
                };
            };
            createdBy: string;
            triggerId: string;
            currentTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            proposedTimeline: {
                projectId: string;
                id: string;
                description: string;
                status: "completed" | "active" | "draft" | "archived";
                createdAt: Date;
                name: string;
                version: number;
                updatedAt: Date;
                generatedAt: Date;
                generatedBy: string;
                dependencies: {
                    projectId: string;
                    id: string;
                    type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                    createdAt: Date;
                    isCritical: boolean;
                    fromTaskId: string;
                    toTaskId: string;
                    lag: number;
                    description?: string | undefined;
                }[];
                startDate: Date;
                endDate: Date;
                tasks: {
                    projectId: string;
                    id: string;
                    description: string;
                    status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                    type: "milestone" | "task" | "subtask" | "deliverable";
                    createdAt: Date;
                    name: string;
                    updatedAt: Date;
                    priority: "low" | "medium" | "high" | "critical";
                    dependencies: string[];
                    progress: number;
                    estimatedDuration: number;
                    startDate: Date;
                    endDate: Date;
                    dependents: string[];
                    resources: string[];
                    completedWork: number;
                    totalWork: number;
                    children: string[];
                    isCritical: boolean;
                    slack: number;
                    customFields: Record<string, any>;
                    actualDuration?: number | undefined;
                    actualStartDate?: Date | undefined;
                    actualEndDate?: Date | undefined;
                    assignedTo?: string | undefined;
                    sourceFact?: {
                        projectId: string;
                        status: "pending" | "valid" | "expired" | "invalid";
                        vendorId: string;
                        vendorName: string;
                        documentType: "DURC" | "visura" | "certification";
                        validUntil: Date;
                        lastChecked: Date;
                        documentNumber: string;
                        issuingAuthority: string;
                        notes?: string | undefined;
                    } | {
                        projectId: string;
                        category: string;
                        status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                        createdAt: Date;
                        updatedAt: Date;
                        location: string;
                        rdoId: string;
                        deadline: Date;
                        offersCount: number;
                        rdoTitle: string;
                        estimatedValue: number;
                        createdBy: string;
                        awardedVendor?: string | undefined;
                    } | {
                        projectId: string;
                        documents: string[];
                        description: string;
                        status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                        authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                        submissionDate: Date;
                        expectedResponseDate: Date;
                        authority: string;
                        referenceNumber: string;
                        requirements: string[];
                        notes?: string | undefined;
                        actualResponseDate?: Date | undefined;
                    } | {
                        projectId: string;
                        status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                        currency: string;
                        features: string[];
                        location: string;
                        portalId: string;
                        pushDate: Date;
                        viewsCount: number;
                        leadsCount: number;
                        portalName: string;
                        listingTitle: string;
                        price: number;
                        propertyType: string;
                        images: string[];
                        contactInfo: {
                            email: string;
                            phone: string;
                            website?: string | undefined;
                        };
                    } | undefined;
                    factId?: string | undefined;
                    parentTaskId?: string | undefined;
                }[];
                criticalPath: string[];
                criticalPathDuration: number;
                overallProgress: number;
                completedTasks: number;
                totalTasks: number;
                sourceFacts: ({
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                })[];
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
            };
            confirmation: {
                required: boolean;
                autoApply: boolean;
                deadline?: Date | undefined;
                approver?: string | undefined;
            };
            appliedAt?: Date | undefined;
        }[];
        activeTriggers: {
            projectId: string;
            id: string;
            status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
            type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
            createdAt: Date;
            updatedAt: Date;
            severity: "low" | "medium" | "high" | "critical";
            impact: {
                description: string;
                riskLevel: "low" | "medium" | "high";
                affectedTasks: string[];
                delayDays: number;
                costImpact: number;
            };
            cause: string;
            detectedAt: Date;
            detectedBy: string;
            sourceFact?: {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            } | undefined;
            details?: any;
        }[];
        lastRegeneratedAt?: Date | undefined;
    };
    generatedAt: Date;
    success: boolean;
    duration: number;
    factsUsed: number;
    tasksGenerated: number;
    criticalPathLength: number;
}>;
/**
 * Request per re-plan
 */
export interface RePlanRequest {
    projectId: string;
    cause: string;
    details: any;
    options?: {
        autoApply?: boolean;
        includePreview?: boolean;
        notifyStakeholders?: boolean;
    };
}
export declare const zRePlanRequest: z.ZodObject<{
    projectId: z.ZodString;
    cause: z.ZodString;
    details: z.ZodAny;
    options: z.ZodOptional<z.ZodObject<{
        autoApply: z.ZodOptional<z.ZodBoolean>;
        includePreview: z.ZodOptional<z.ZodBoolean>;
        notifyStakeholders: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        autoApply?: boolean | undefined;
        includePreview?: boolean | undefined;
        notifyStakeholders?: boolean | undefined;
    }, {
        autoApply?: boolean | undefined;
        includePreview?: boolean | undefined;
        notifyStakeholders?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    projectId: string;
    cause: string;
    options?: {
        autoApply?: boolean | undefined;
        includePreview?: boolean | undefined;
        notifyStakeholders?: boolean | undefined;
    } | undefined;
    details?: any;
}, {
    projectId: string;
    cause: string;
    options?: {
        autoApply?: boolean | undefined;
        includePreview?: boolean | undefined;
        notifyStakeholders?: boolean | undefined;
    } | undefined;
    details?: any;
}>;
/**
 * Response re-plan
 */
export interface RePlanResponse {
    success: boolean;
    trigger: RePlanTrigger;
    proposal: RePlanProposal;
    preview?: RePlanPreview;
    applied: boolean;
    appliedAt?: Date;
}
export declare const zRePlanResponse: z.ZodObject<{
    success: z.ZodBoolean;
    trigger: z.ZodObject<{
        id: z.ZodString;
        type: z.ZodEnum<["document_expiry", "sal_delay", "procurement_delay", "resource_conflict", "scope_change", "risk_materialized"]>;
        projectId: z.ZodString;
        cause: z.ZodString;
        details: z.ZodAny;
        severity: z.ZodEnum<["low", "medium", "high", "critical"]>;
        detectedAt: z.ZodDate;
        impact: z.ZodObject<{
            affectedTasks: z.ZodArray<z.ZodString, "many">;
            delayDays: z.ZodNumber;
            costImpact: z.ZodNumber;
            riskLevel: z.ZodEnum<["low", "medium", "high"]>;
            description: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        }, {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        }>;
        status: z.ZodEnum<["detected", "analyzing", "proposed", "approved", "rejected", "applied"]>;
        sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            vendorId: z.ZodString;
            documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
            status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
            validUntil: z.ZodDate;
            lastChecked: z.ZodDate;
            projectId: z.ZodString;
            vendorName: z.ZodString;
            documentNumber: z.ZodString;
            issuingAuthority: z.ZodString;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }, {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        }>, z.ZodObject<{
            rdoId: z.ZodString;
            status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
            deadline: z.ZodDate;
            offersCount: z.ZodNumber;
            awardedVendor: z.ZodOptional<z.ZodString>;
            projectId: z.ZodString;
            rdoTitle: z.ZodString;
            category: z.ZodString;
            estimatedValue: z.ZodNumber;
            location: z.ZodString;
            createdBy: z.ZodString;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }, {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        }>, z.ZodObject<{
            authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
            status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
            submissionDate: z.ZodDate;
            expectedResponseDate: z.ZodDate;
            actualResponseDate: z.ZodOptional<z.ZodDate>;
            projectId: z.ZodString;
            authority: z.ZodString;
            referenceNumber: z.ZodString;
            description: z.ZodString;
            requirements: z.ZodArray<z.ZodString, "many">;
            documents: z.ZodArray<z.ZodString, "many">;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }, {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        }>, z.ZodObject<{
            portalId: z.ZodString;
            status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
            pushDate: z.ZodDate;
            viewsCount: z.ZodNumber;
            leadsCount: z.ZodNumber;
            projectId: z.ZodString;
            portalName: z.ZodString;
            listingTitle: z.ZodString;
            price: z.ZodNumber;
            currency: z.ZodString;
            location: z.ZodString;
            propertyType: z.ZodString;
            features: z.ZodArray<z.ZodString, "many">;
            images: z.ZodArray<z.ZodString, "many">;
            contactInfo: z.ZodObject<{
                phone: z.ZodString;
                email: z.ZodString;
                website: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                email: string;
                phone: string;
                website?: string | undefined;
            }, {
                email: string;
                phone: string;
                website?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }, {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        }>]>>;
        detectedBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    }>;
    proposal: z.ZodObject<{
        id: z.ZodString;
        triggerId: z.ZodString;
        projectId: z.ZodString;
        currentTimeline: z.ZodObject<{
            id: z.ZodString;
            projectId: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            tasks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                estimatedDuration: z.ZodNumber;
                actualDuration: z.ZodOptional<z.ZodNumber>;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                dependencies: z.ZodArray<z.ZodString, "many">;
                dependents: z.ZodArray<z.ZodString, "many">;
                assignedTo: z.ZodOptional<z.ZodString>;
                resources: z.ZodArray<z.ZodString, "many">;
                progress: z.ZodNumber;
                completedWork: z.ZodNumber;
                totalWork: z.ZodNumber;
                sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>>;
                factId: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                parentTaskId: z.ZodOptional<z.ZodString>;
                children: z.ZodArray<z.ZodString, "many">;
                isCritical: z.ZodBoolean;
                slack: z.ZodNumber;
                customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }>, "many">;
            dependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            criticalPath: z.ZodArray<z.ZodString, "many">;
            criticalPathDuration: z.ZodNumber;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            overallProgress: z.ZodNumber;
            completedTasks: z.ZodNumber;
            totalTasks: z.ZodNumber;
            version: z.ZodNumber;
            generatedAt: z.ZodDate;
            generatedBy: z.ZodString;
            sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>, "many">;
            status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }>;
        proposedTimeline: z.ZodObject<{
            id: z.ZodString;
            projectId: z.ZodString;
            name: z.ZodString;
            description: z.ZodString;
            tasks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                name: z.ZodString;
                description: z.ZodString;
                type: z.ZodEnum<["milestone", "task", "subtask", "deliverable"]>;
                status: z.ZodEnum<["not_started", "in_progress", "completed", "blocked", "cancelled"]>;
                priority: z.ZodEnum<["low", "medium", "high", "critical"]>;
                estimatedDuration: z.ZodNumber;
                actualDuration: z.ZodOptional<z.ZodNumber>;
                startDate: z.ZodDate;
                endDate: z.ZodDate;
                actualStartDate: z.ZodOptional<z.ZodDate>;
                actualEndDate: z.ZodOptional<z.ZodDate>;
                dependencies: z.ZodArray<z.ZodString, "many">;
                dependents: z.ZodArray<z.ZodString, "many">;
                assignedTo: z.ZodOptional<z.ZodString>;
                resources: z.ZodArray<z.ZodString, "many">;
                progress: z.ZodNumber;
                completedWork: z.ZodNumber;
                totalWork: z.ZodNumber;
                sourceFact: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    vendorId: z.ZodString;
                    documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                    status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                    validUntil: z.ZodDate;
                    lastChecked: z.ZodDate;
                    projectId: z.ZodString;
                    vendorName: z.ZodString;
                    documentNumber: z.ZodString;
                    issuingAuthority: z.ZodString;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }, {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                }>, z.ZodObject<{
                    rdoId: z.ZodString;
                    status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                    deadline: z.ZodDate;
                    offersCount: z.ZodNumber;
                    awardedVendor: z.ZodOptional<z.ZodString>;
                    projectId: z.ZodString;
                    rdoTitle: z.ZodString;
                    category: z.ZodString;
                    estimatedValue: z.ZodNumber;
                    location: z.ZodString;
                    createdBy: z.ZodString;
                    createdAt: z.ZodDate;
                    updatedAt: z.ZodDate;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }, {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                }>, z.ZodObject<{
                    authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                    status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                    submissionDate: z.ZodDate;
                    expectedResponseDate: z.ZodDate;
                    actualResponseDate: z.ZodOptional<z.ZodDate>;
                    projectId: z.ZodString;
                    authority: z.ZodString;
                    referenceNumber: z.ZodString;
                    description: z.ZodString;
                    requirements: z.ZodArray<z.ZodString, "many">;
                    documents: z.ZodArray<z.ZodString, "many">;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }, {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                }>, z.ZodObject<{
                    portalId: z.ZodString;
                    status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                    pushDate: z.ZodDate;
                    viewsCount: z.ZodNumber;
                    leadsCount: z.ZodNumber;
                    projectId: z.ZodString;
                    portalName: z.ZodString;
                    listingTitle: z.ZodString;
                    price: z.ZodNumber;
                    currency: z.ZodString;
                    location: z.ZodString;
                    propertyType: z.ZodString;
                    features: z.ZodArray<z.ZodString, "many">;
                    images: z.ZodArray<z.ZodString, "many">;
                    contactInfo: z.ZodObject<{
                        phone: z.ZodString;
                        email: z.ZodString;
                        website: z.ZodOptional<z.ZodString>;
                    }, "strip", z.ZodTypeAny, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }, {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    }>;
                }, "strip", z.ZodTypeAny, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }, {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                }>]>>;
                factId: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                parentTaskId: z.ZodOptional<z.ZodString>;
                children: z.ZodArray<z.ZodString, "many">;
                isCritical: z.ZodBoolean;
                slack: z.ZodNumber;
                customFields: z.ZodRecord<z.ZodString, z.ZodAny>;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }, {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }>, "many">;
            dependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            criticalPath: z.ZodArray<z.ZodString, "many">;
            criticalPathDuration: z.ZodNumber;
            startDate: z.ZodDate;
            endDate: z.ZodDate;
            actualStartDate: z.ZodOptional<z.ZodDate>;
            actualEndDate: z.ZodOptional<z.ZodDate>;
            overallProgress: z.ZodNumber;
            completedTasks: z.ZodNumber;
            totalTasks: z.ZodNumber;
            version: z.ZodNumber;
            generatedAt: z.ZodDate;
            generatedBy: z.ZodString;
            sourceFacts: z.ZodArray<z.ZodUnion<[z.ZodObject<{
                vendorId: z.ZodString;
                documentType: z.ZodEnum<["DURC", "visura", "certification"]>;
                status: z.ZodEnum<["pending", "valid", "expired", "invalid"]>;
                validUntil: z.ZodDate;
                lastChecked: z.ZodDate;
                projectId: z.ZodString;
                vendorName: z.ZodString;
                documentNumber: z.ZodString;
                issuingAuthority: z.ZodString;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }, {
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            }>, z.ZodObject<{
                rdoId: z.ZodString;
                status: z.ZodEnum<["draft", "published", "offers_received", "comparing", "awarded", "cancelled"]>;
                deadline: z.ZodDate;
                offersCount: z.ZodNumber;
                awardedVendor: z.ZodOptional<z.ZodString>;
                projectId: z.ZodString;
                rdoTitle: z.ZodString;
                category: z.ZodString;
                estimatedValue: z.ZodNumber;
                location: z.ZodString;
                createdBy: z.ZodString;
                createdAt: z.ZodDate;
                updatedAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }, {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            }>, z.ZodObject<{
                authorizationType: z.ZodEnum<["CDU", "SCIA", "permits", "building_permit", "environmental_clearance"]>;
                status: z.ZodEnum<["pending", "submitted", "under_review", "approved", "rejected", "expired"]>;
                submissionDate: z.ZodDate;
                expectedResponseDate: z.ZodDate;
                actualResponseDate: z.ZodOptional<z.ZodDate>;
                projectId: z.ZodString;
                authority: z.ZodString;
                referenceNumber: z.ZodString;
                description: z.ZodString;
                requirements: z.ZodArray<z.ZodString, "many">;
                documents: z.ZodArray<z.ZodString, "many">;
                notes: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }, {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            }>, z.ZodObject<{
                portalId: z.ZodString;
                status: z.ZodEnum<["preparing", "pushed", "published", "monitoring", "expired", "removed"]>;
                pushDate: z.ZodDate;
                viewsCount: z.ZodNumber;
                leadsCount: z.ZodNumber;
                projectId: z.ZodString;
                portalName: z.ZodString;
                listingTitle: z.ZodString;
                price: z.ZodNumber;
                currency: z.ZodString;
                location: z.ZodString;
                propertyType: z.ZodString;
                features: z.ZodArray<z.ZodString, "many">;
                images: z.ZodArray<z.ZodString, "many">;
                contactInfo: z.ZodObject<{
                    phone: z.ZodString;
                    email: z.ZodString;
                    website: z.ZodOptional<z.ZodString>;
                }, "strip", z.ZodTypeAny, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }, {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                }>;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }, {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            }>]>, "many">;
            status: z.ZodEnum<["draft", "active", "completed", "archived"]>;
            createdAt: z.ZodDate;
            updatedAt: z.ZodDate;
        }, "strip", z.ZodTypeAny, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }, {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        }>;
        changes: z.ZodObject<{
            shiftedTasks: z.ZodArray<z.ZodObject<{
                taskId: z.ZodString;
                originalStartDate: z.ZodDate;
                originalEndDate: z.ZodDate;
                newStartDate: z.ZodDate;
                newEndDate: z.ZodDate;
                shiftDays: z.ZodNumber;
                reason: z.ZodString;
                impact: z.ZodObject<{
                    dependencies: z.ZodArray<z.ZodString, "many">;
                    resources: z.ZodArray<z.ZodString, "many">;
                    cost: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                }, {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                }>;
            }, "strip", z.ZodTypeAny, {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }, {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }>, "many">;
            newDependencies: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                fromTaskId: z.ZodString;
                toTaskId: z.ZodString;
                type: z.ZodEnum<["finish_to_start", "start_to_start", "finish_to_finish", "start_to_finish"]>;
                lag: z.ZodNumber;
                projectId: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                isCritical: z.ZodBoolean;
                createdAt: z.ZodDate;
            }, "strip", z.ZodTypeAny, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }, {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }>, "many">;
            resourceChanges: z.ZodArray<z.ZodObject<{
                taskId: z.ZodString;
                originalResources: z.ZodArray<z.ZodString, "many">;
                newResources: z.ZodArray<z.ZodString, "many">;
                reason: z.ZodString;
                impact: z.ZodObject<{
                    cost: z.ZodNumber;
                    availability: z.ZodBoolean;
                    skills: z.ZodArray<z.ZodString, "many">;
                }, "strip", z.ZodTypeAny, {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                }, {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                }>;
            }, "strip", z.ZodTypeAny, {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }, {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }>, "many">;
            costImpact: z.ZodObject<{
                originalCost: z.ZodNumber;
                newCost: z.ZodNumber;
                difference: z.ZodNumber;
                breakdown: z.ZodObject<{
                    labor: z.ZodNumber;
                    materials: z.ZodNumber;
                    overhead: z.ZodNumber;
                    contingency: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                }, {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                }>;
                currency: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            }, {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            }>;
        }, "strip", z.ZodTypeAny, {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        }, {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        }>;
        impact: z.ZodObject<{
            totalDelay: z.ZodNumber;
            criticalPathChanges: z.ZodArray<z.ZodString, "many">;
            riskAssessment: z.ZodObject<{
                overallRisk: z.ZodEnum<["low", "medium", "high", "critical"]>;
                risks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    description: z.ZodString;
                    probability: z.ZodNumber;
                    impact: z.ZodEnum<["low", "medium", "high", "critical"]>;
                    mitigation: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }, {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }>, "many">;
                recommendations: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            }, {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            }>;
            recommendations: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        }, {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        }>;
        confirmation: z.ZodObject<{
            required: z.ZodBoolean;
            approver: z.ZodOptional<z.ZodString>;
            deadline: z.ZodOptional<z.ZodDate>;
            autoApply: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        }, {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        }>;
        status: z.ZodEnum<["draft", "proposed", "approved", "rejected", "applied"]>;
        createdBy: z.ZodString;
        createdAt: z.ZodDate;
        updatedAt: z.ZodDate;
        appliedAt: z.ZodOptional<z.ZodDate>;
    }, "strip", z.ZodTypeAny, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }, {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    }>;
    preview: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        proposalId: z.ZodString;
        beforeAfter: z.ZodObject<{
            before: z.ZodString;
            after: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            before: string;
            after: string;
        }, {
            before: string;
            after: string;
        }>;
        changes: z.ZodObject<{
            summary: z.ZodString;
            details: z.ZodArray<z.ZodString, "many">;
            affectedTasks: z.ZodNumber;
            totalDelay: z.ZodNumber;
            costImpact: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        }, {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        }>;
        impact: z.ZodObject<{
            summary: z.ZodString;
            risks: z.ZodArray<z.ZodString, "many">;
            benefits: z.ZodArray<z.ZodString, "many">;
            recommendations: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        }, {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        }>;
        actions: z.ZodObject<{
            approve: z.ZodBoolean;
            reject: z.ZodBoolean;
            modify: z.ZodBoolean;
            autoApply: z.ZodBoolean;
        }, "strip", z.ZodTypeAny, {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        }, {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        }>;
        createdAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        id: string;
        createdAt: Date;
        changes: {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        };
        impact: {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        };
        actions: {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        };
        proposalId: string;
        beforeAfter: {
            before: string;
            after: string;
        };
    }, {
        id: string;
        createdAt: Date;
        changes: {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        };
        impact: {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        };
        actions: {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        };
        proposalId: string;
        beforeAfter: {
            before: string;
            after: string;
        };
    }>>;
    applied: z.ZodBoolean;
    appliedAt: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    success: boolean;
    applied: boolean;
    trigger: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    };
    proposal: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    };
    appliedAt?: Date | undefined;
    preview?: {
        id: string;
        createdAt: Date;
        changes: {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        };
        impact: {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        };
        actions: {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        };
        proposalId: string;
        beforeAfter: {
            before: string;
            after: string;
        };
    } | undefined;
}, {
    success: boolean;
    applied: boolean;
    trigger: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "detected" | "analyzing" | "proposed" | "applied";
        type: "document_expiry" | "sal_delay" | "procurement_delay" | "resource_conflict" | "scope_change" | "risk_materialized";
        createdAt: Date;
        updatedAt: Date;
        severity: "low" | "medium" | "high" | "critical";
        impact: {
            description: string;
            riskLevel: "low" | "medium" | "high";
            affectedTasks: string[];
            delayDays: number;
            costImpact: number;
        };
        cause: string;
        detectedAt: Date;
        detectedBy: string;
        sourceFact?: {
            projectId: string;
            status: "pending" | "valid" | "expired" | "invalid";
            vendorId: string;
            vendorName: string;
            documentType: "DURC" | "visura" | "certification";
            validUntil: Date;
            lastChecked: Date;
            documentNumber: string;
            issuingAuthority: string;
            notes?: string | undefined;
        } | {
            projectId: string;
            category: string;
            status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
            createdAt: Date;
            updatedAt: Date;
            location: string;
            rdoId: string;
            deadline: Date;
            offersCount: number;
            rdoTitle: string;
            estimatedValue: number;
            createdBy: string;
            awardedVendor?: string | undefined;
        } | {
            projectId: string;
            documents: string[];
            description: string;
            status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
            authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
            submissionDate: Date;
            expectedResponseDate: Date;
            authority: string;
            referenceNumber: string;
            requirements: string[];
            notes?: string | undefined;
            actualResponseDate?: Date | undefined;
        } | {
            projectId: string;
            status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
            currency: string;
            features: string[];
            location: string;
            portalId: string;
            pushDate: Date;
            viewsCount: number;
            leadsCount: number;
            portalName: string;
            listingTitle: string;
            price: number;
            propertyType: string;
            images: string[];
            contactInfo: {
                email: string;
                phone: string;
                website?: string | undefined;
            };
        } | undefined;
        details?: any;
    };
    proposal: {
        projectId: string;
        id: string;
        status: "approved" | "rejected" | "draft" | "proposed" | "applied";
        createdAt: Date;
        updatedAt: Date;
        changes: {
            costImpact: {
                currency: string;
                breakdown: {
                    labor: number;
                    materials: number;
                    overhead: number;
                    contingency: number;
                };
                originalCost: number;
                newCost: number;
                difference: number;
            };
            shiftedTasks: {
                impact: {
                    cost: number;
                    dependencies: string[];
                    resources: string[];
                };
                reason: string;
                taskId: string;
                originalStartDate: Date;
                originalEndDate: Date;
                newStartDate: Date;
                newEndDate: Date;
                shiftDays: number;
            }[];
            newDependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            resourceChanges: {
                impact: {
                    cost: number;
                    availability: boolean;
                    skills: string[];
                };
                reason: string;
                taskId: string;
                originalResources: string[];
                newResources: string[];
            }[];
        };
        impact: {
            recommendations: string[];
            totalDelay: number;
            criticalPathChanges: string[];
            riskAssessment: {
                recommendations: string[];
                risks: {
                    id: string;
                    description: string;
                    impact: "low" | "medium" | "high" | "critical";
                    probability: number;
                    mitigation: string;
                }[];
                overallRisk: "low" | "medium" | "high" | "critical";
            };
        };
        createdBy: string;
        triggerId: string;
        currentTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        proposedTimeline: {
            projectId: string;
            id: string;
            description: string;
            status: "completed" | "active" | "draft" | "archived";
            createdAt: Date;
            name: string;
            version: number;
            updatedAt: Date;
            generatedAt: Date;
            generatedBy: string;
            dependencies: {
                projectId: string;
                id: string;
                type: "finish_to_start" | "start_to_start" | "finish_to_finish" | "start_to_finish";
                createdAt: Date;
                isCritical: boolean;
                fromTaskId: string;
                toTaskId: string;
                lag: number;
                description?: string | undefined;
            }[];
            startDate: Date;
            endDate: Date;
            tasks: {
                projectId: string;
                id: string;
                description: string;
                status: "blocked" | "completed" | "cancelled" | "not_started" | "in_progress";
                type: "milestone" | "task" | "subtask" | "deliverable";
                createdAt: Date;
                name: string;
                updatedAt: Date;
                priority: "low" | "medium" | "high" | "critical";
                dependencies: string[];
                progress: number;
                estimatedDuration: number;
                startDate: Date;
                endDate: Date;
                dependents: string[];
                resources: string[];
                completedWork: number;
                totalWork: number;
                children: string[];
                isCritical: boolean;
                slack: number;
                customFields: Record<string, any>;
                actualDuration?: number | undefined;
                actualStartDate?: Date | undefined;
                actualEndDate?: Date | undefined;
                assignedTo?: string | undefined;
                sourceFact?: {
                    projectId: string;
                    status: "pending" | "valid" | "expired" | "invalid";
                    vendorId: string;
                    vendorName: string;
                    documentType: "DURC" | "visura" | "certification";
                    validUntil: Date;
                    lastChecked: Date;
                    documentNumber: string;
                    issuingAuthority: string;
                    notes?: string | undefined;
                } | {
                    projectId: string;
                    category: string;
                    status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                    createdAt: Date;
                    updatedAt: Date;
                    location: string;
                    rdoId: string;
                    deadline: Date;
                    offersCount: number;
                    rdoTitle: string;
                    estimatedValue: number;
                    createdBy: string;
                    awardedVendor?: string | undefined;
                } | {
                    projectId: string;
                    documents: string[];
                    description: string;
                    status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                    authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                    submissionDate: Date;
                    expectedResponseDate: Date;
                    authority: string;
                    referenceNumber: string;
                    requirements: string[];
                    notes?: string | undefined;
                    actualResponseDate?: Date | undefined;
                } | {
                    projectId: string;
                    status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                    currency: string;
                    features: string[];
                    location: string;
                    portalId: string;
                    pushDate: Date;
                    viewsCount: number;
                    leadsCount: number;
                    portalName: string;
                    listingTitle: string;
                    price: number;
                    propertyType: string;
                    images: string[];
                    contactInfo: {
                        email: string;
                        phone: string;
                        website?: string | undefined;
                    };
                } | undefined;
                factId?: string | undefined;
                parentTaskId?: string | undefined;
            }[];
            criticalPath: string[];
            criticalPathDuration: number;
            overallProgress: number;
            completedTasks: number;
            totalTasks: number;
            sourceFacts: ({
                projectId: string;
                status: "pending" | "valid" | "expired" | "invalid";
                vendorId: string;
                vendorName: string;
                documentType: "DURC" | "visura" | "certification";
                validUntil: Date;
                lastChecked: Date;
                documentNumber: string;
                issuingAuthority: string;
                notes?: string | undefined;
            } | {
                projectId: string;
                category: string;
                status: "draft" | "cancelled" | "published" | "offers_received" | "comparing" | "awarded";
                createdAt: Date;
                updatedAt: Date;
                location: string;
                rdoId: string;
                deadline: Date;
                offersCount: number;
                rdoTitle: string;
                estimatedValue: number;
                createdBy: string;
                awardedVendor?: string | undefined;
            } | {
                projectId: string;
                documents: string[];
                description: string;
                status: "pending" | "expired" | "approved" | "rejected" | "submitted" | "under_review";
                authorizationType: "permits" | "CDU" | "SCIA" | "building_permit" | "environmental_clearance";
                submissionDate: Date;
                expectedResponseDate: Date;
                authority: string;
                referenceNumber: string;
                requirements: string[];
                notes?: string | undefined;
                actualResponseDate?: Date | undefined;
            } | {
                projectId: string;
                status: "expired" | "published" | "preparing" | "pushed" | "monitoring" | "removed";
                currency: string;
                features: string[];
                location: string;
                portalId: string;
                pushDate: Date;
                viewsCount: number;
                leadsCount: number;
                portalName: string;
                listingTitle: string;
                price: number;
                propertyType: string;
                images: string[];
                contactInfo: {
                    email: string;
                    phone: string;
                    website?: string | undefined;
                };
            })[];
            actualStartDate?: Date | undefined;
            actualEndDate?: Date | undefined;
        };
        confirmation: {
            required: boolean;
            autoApply: boolean;
            deadline?: Date | undefined;
            approver?: string | undefined;
        };
        appliedAt?: Date | undefined;
    };
    appliedAt?: Date | undefined;
    preview?: {
        id: string;
        createdAt: Date;
        changes: {
            summary: string;
            details: string[];
            affectedTasks: number;
            costImpact: number;
            totalDelay: number;
        };
        impact: {
            recommendations: string[];
            summary: string;
            risks: string[];
            benefits: string[];
        };
        actions: {
            approve: boolean;
            reject: boolean;
            autoApply: boolean;
            modify: boolean;
        };
        proposalId: string;
        beforeAfter: {
            before: string;
            after: string;
        };
    } | undefined;
}>;
//# sourceMappingURL=timeline.d.ts.map